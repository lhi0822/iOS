//
//  SNSInfoViewController.m
//  mfinity_sns
//
//  Created by hilee on 2017. 8. 23..
//  Copyright © 2017년 com.dbvalley. All rights reserved.
//

#import "SNSInfoViewController.h"
#import "SNSInfoTableViewCell.h"
#import "SNSNoticeSetViewController.h"
#import "MFStyle.h"
#import "BoardCreateViewController.h"
#import "MemberManageViewController.h"

#define HEADER_HEIGHT 45

@interface SNSInfoViewController () {
    NSArray *infoKeyArr1;
    NSArray *infoValArr1;
    
    NSArray *infoKeyArr2;
    NSArray *infoValArr2;
    
    NSArray *infoKeyArr3;
    NSArray *infoValArr3;
    
    NSString *myUserNo;
    NSString *snsLeader;
    
    AppDelegate *appDelegate;
    NSString *mode;
    
    int currSnsKind;
}

@end

@implementation SNSInfoViewController

-(void)viewWillAppear:(BOOL)animated{
    //self.navigationController.navigationBar.barTintColor = [MFUtil myRGBfromHex:@"1D4696"];
    
    self.navigationController.navigationBar.translucent = NO;
    self.navigationController.navigationBar.barTintColor = [MFUtil myRGBfromHex:@"1D4696"];
    self.navigationController.navigationBar.tintColor = [UIColor whiteColor];
    
    self.navigationItem.leftBarButtonItem =[[UIBarButtonItem alloc]initWithImage:[self getScaledImage:[UIImage imageNamed:@"btn_close.png"] scaledToMaxWidth:20] style:UIBarButtonItemStylePlain target:self action:@selector(closeButtonClick)];
    
}

- (void)viewDidLoad {
    [super viewDidLoad];
    NSUserDefaults *prefs = [NSUserDefaults standardUserDefaults];
    myUserNo = [prefs objectForKey:@"CUSER_NO"];
    //    NSLog(@"self.snsInfoDic : %@", self.snsInfoDic);
    
    currSnsKind = 0;
    appDelegate = (AppDelegate *)[UIApplication sharedApplication].delegate;
    
    [self setTableData];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

-(void)closeButtonClick{
    [self dismissViewControllerAnimated:YES completion:nil];
}

-(void)setTableData{
    @try{
        //settabledata snsinfodic : self.snsinfodic
        NSLog(@"setTableData snsInfoDic : %@", self.snsInfoDic);
        NSString *snsName = [NSString urlDecodeString:[self.snsInfoDic objectForKey:@"SNS_NM"]];
        NSString *snsType = [NSString urlDecodeString:[self.snsInfoDic objectForKey:@"SNS_TY"]];
        NSString *snsKind = [NSString urlDecodeString:[self.snsInfoDic objectForKey:@"SNS_KIND"]];
        snsLeader = [self.snsInfoDic objectForKey:@"CREATE_USER_NO"];
        NSString *snsLeaderNm = [NSString urlDecodeString:[self.snsInfoDic objectForKey:@"CREATE_USER_NM"]];
        NSString *snsMember = [NSString stringWithFormat:@"%@",[self.snsInfoDic objectForKey:@"USER_COUNT"]];
        NSString *needAllow = [NSString stringWithFormat:@"%@",[self.snsInfoDic objectForKey:@"NEED_ALLOW"]];
        NSString *snsDesc = [NSString urlDecodeString:[self.snsInfoDic objectForKey:@"SNS_DESC"]];
        NSString *createDate = [NSString urlDecodeString:[self.snsInfoDic objectForKey:@"CREATE_DATE"]];
        //NSString *itemType = [NSString urlDecodeString:[self.snsInfoDic objectForKey:@"ITEM_TYPE"]];
        //NSString *waitingCnt = [NSString stringWithFormat:@"%@",[self.snsInfoDic objectForKey:@"WAITING_USER_COUNT"]];
        
        NSLog(@"snsName : %@", snsName);
        NSLog(@"snsType : %@", snsType);
        NSLog(@"snsKind : %@", snsKind);
        NSLog(@"snsLeader : %@", snsLeader);
        NSLog(@"snsLeaderNm : %@", snsLeaderNm);
        NSLog(@"snsMember : %@", snsMember);
        NSLog(@"needAllow : %@", needAllow);
        NSLog(@"snsDesc : %@", snsDesc);
        NSLog(@"createDate : %@", createDate);
        
        currSnsKind = [snsKind intValue];
        
        NSString *resultKind;
        NSString *resultType;
        NSString *resultAllow;
        
        if([snsKind isEqualToString:@"Normal"] || [snsKind isEqualToString:@"1"]) resultKind = @"일반형";
        else if([snsKind isEqualToString:@"Project"] || [snsKind isEqualToString:@"2"]) resultKind = @"프로젝트형";
        
        if([snsType isEqualToString:@"Public"] || [snsType isEqualToString:@"3"] ) resultType = @"공개";
        else if([snsType isEqualToString:@"Closed"] || [snsType isEqualToString:@"2"] ) resultType = @"이름 공개";
        else if([snsType isEqualToString:@"Secret"] || [snsType isEqualToString:@"1"] ) resultType = @"비공개";
        
        if([needAllow isEqualToString:@"0"]) resultAllow = @"비승인";
        else if([needAllow isEqualToString:@"1"]) resultAllow = @"승인";
        
        NSDateFormatter *dateFormat = [[NSDateFormatter alloc] init];
        
        if([appDelegate.legacy_name isEqualToString:@"ANYMATE"]){
            [dateFormat setDateFormat:@"yyyy-MM-dd HH:mm:ss.sss"];
        } else if([appDelegate.legacy_name isEqualToString:@"HHI"]){
            [dateFormat setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
        } else {
            [dateFormat setDateFormat:@"yyyy-MM-dd HH:mm:ss.sss"];
        }
        
        NSDate *nsDate = [dateFormat dateFromString:createDate];
        
        NSDateFormatter *dateFormat2 = [[NSDateFormatter alloc] init];
        [dateFormat2 setDateFormat:@"yyyy-MM-dd"];
        NSString *dateStr = [dateFormat2 stringFromDate:nsDate];
        NSLog(@"dateStr : %@", dateStr);
        
        NSString *titleStr = [NSString stringWithFormat:@"%@ 정보", snsName];
        self.navigationItem.titleView = [MFStyle navigationTitleStyle1:titleStr];
        
        infoKeyArr1 = @[@"이름",@"리더",@"타입",@"멤버수",@"공개 여부",@"가입시 승인 여부",@"게시판 설명",@"게시판 생성일자"];
        infoValArr1 = @[snsName, snsLeaderNm, resultKind, snsMember, resultType, resultAllow, snsDesc, dateStr];
        NSLog(@"setTableData infoValArr1 : %@", infoValArr1);
        
        infoKeyArr2 = @[@"게시판 설정 변경", @"멤버 강제탈퇴", @"가입 신청자"];
        infoValArr2 = @[];
        
        infoKeyArr3 = @[@"알림 설정"];
        infoValArr3 = @[];
        
    } @catch (NSException *exception) {
        //[self sendToHilee:[NSString stringWithFormat:@"%s", __func__] :exception];
        NSLog(@"exception : %@", exception);
    }
}

-(void)callWebService:(NSString *)serviceName{
    @try{
        NSString *urlString = appDelegate.main_url;
        NSURL *url = [NSURL URLWithString:[urlString stringByAppendingPathComponent:serviceName]];
        NSString *paramString = nil;
        
        NSString *myUserNo = [[NSUserDefaults standardUserDefaults] objectForKey:@"CUSER_NO"];
        NSString *compNo = [[NSUserDefaults standardUserDefaults] objectForKey:@"COMP_NO"];
        //NSString *mfpsId = [NSString stringWithFormat:@"USER.%@.%@", [[NSUserDefaults standardUserDefaults] objectForKey:@"USER_ID"], [MFUtil getUUID]];
        NSString *mfpsId = [NSString stringWithFormat:@"USER.%@.%@", [[NSUserDefaults standardUserDefaults] objectForKey:@"USER_ID"], [[NSUserDefaults standardUserDefaults] objectForKey:@"DVC_ID"]];
        NSString *snsNo = [self.snsInfoDic objectForKey:@"SNS_NO"];
        
        if([serviceName isEqualToString:@"withdrawSNS"]){
            //isJoin("true":탈퇴 or "false":가입신청취소)
            paramString = [NSString stringWithFormat:@"usrNo=%@&compNo=%@&snsNo=%@&mfpsId=%@&isJoin=true", myUserNo, compNo, snsNo, mfpsId];
            
        } else if([serviceName isEqualToString:@"deleteSNS"]){
            paramString = [NSString stringWithFormat:@"usrNo=%@&compNo=%@&snsNo=%@", myUserNo, compNo, snsNo];
        }
        
        MFURLSession *session = [[MFURLSession alloc]initWithURL:url option:paramString];
        session.delegate = self;
        [session start];
        
    } @catch (NSException *exception) {
        //[self sendToHilee:[NSString stringWithFormat:@"%s", __func__] :exception];
    }
}

#pragma mark - MFURLSessionDelegate
- (void)returnDataWithObject:(MFURLSession *)session error:(NSString *)error{
    [SVProgressHUD dismiss];
    //NSLog(@"reteurnDataString : %@",session.returnDataString);
    NSLog(@"error : %@",error);
    if (error!=nil) {
        NSLog(@"error : %@",error);
    }else{
        NSString *result = [session.returnDictionary objectForKey:@"RESULT"];
        NSString *wsName = [[session.url absoluteString] lastPathComponent];
        //NSLog(@"wsName : %@", wsName);
        
        if ([result isEqualToString:@"SUCCESS"]) {
            NSLog(@"session.returnDictionary : %@", session.returnDictionary);
            if([wsName isEqualToString:@"withdrawSNS"]){
                UIAlertController *alert = [UIAlertController alertControllerWithTitle:NSLocalizedString(@"board_info_create_secession4", @"board_info_create_secession4") message:nil preferredStyle:UIAlertControllerStyleAlert];
                UIAlertAction* okButton = [UIAlertAction actionWithTitle:NSLocalizedString(@"확인", @"확인") style:UIAlertActionStyleDefault
                                                                 handler:^(UIAlertAction * action) {
                                                                     [alert dismissViewControllerAnimated:YES completion:nil];
                                                                     
                                                                     [[NSNotificationCenter defaultCenter] postNotificationName:@"noti_RefreshTeamList" object:nil];
                                                                     [self dismissViewControllerAnimated:YES completion:nil];
                                                                     [[NSNotificationCenter defaultCenter] postNotificationName:@"noti_CloseSNS" object:nil];
                                                                 }];
                [alert addAction:okButton];
                [self presentViewController:alert animated:YES completion:nil];
                
            } else if([wsName isEqualToString:@"deleteSNS"]){
                UIAlertController *alert = [UIAlertController alertControllerWithTitle:NSLocalizedString(@"board_info_create_secession3", @"board_info_create_secession3") message:nil preferredStyle:UIAlertControllerStyleAlert];
                UIAlertAction* okButton = [UIAlertAction actionWithTitle:NSLocalizedString(@"확인", @"확인") style:UIAlertActionStyleDefault
                                                                 handler:^(UIAlertAction * action) {
                                                                     [alert dismissViewControllerAnimated:YES completion:nil];
                                                                     
                                                                     [[NSNotificationCenter defaultCenter] postNotificationName:@"noti_RefreshTeamList" object:nil];
                                                                     [self dismissViewControllerAnimated:YES completion:nil];
                                                                     [[NSNotificationCenter defaultCenter] postNotificationName:@"noti_CloseSNS" object:nil];
                                                                 }];
                [alert addAction:okButton];
                [self presentViewController:alert animated:YES completion:nil];
            }
        }
    }
}

#pragma mark - UITableView Delegate & Datasrouce
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    //    if([[NSString stringWithFormat:@"%@", snsLeader] isEqualToString:adminNo1] || [[NSString stringWithFormat:@"%@", snsLeader] isEqualToString:adminNo2]){
    //        return 3;
    //    } else {
    //        return 4;
    //    }
    
    if([[NSString stringWithFormat:@"%@", myUserNo] isEqualToString:[NSString stringWithFormat:@"%@", snsLeader]]){
        return 4;
    } else {
        if(![[NSString stringWithFormat:@"%@", snsLeader] isEqualToString:appDelegate.adminNo1] && ![[NSString stringWithFormat:@"%@", snsLeader] isEqualToString:appDelegate.adminNo2]){
            return 3;
        } else {
            return 2;
        }
    }
}


-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    return 45;
}

/*
 - (void)tableView:(UITableView *)tableView willDisplayHeaderView:(UIView *)view forSection:(NSInteger)section {
 UITableViewHeaderFooterView *header = (UITableViewHeaderFooterView *)view;
 
 header.textLabel.textColor = [UIColor blackColor];
 header.textLabel.font = [UIFont boldSystemFontOfSize:15];
 CGRect headerFrame = header.frame;
 header.textLabel.frame = headerFrame;
 }
 */

-(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
    if([[NSString stringWithFormat:@"%@", myUserNo] isEqualToString:[NSString stringWithFormat:@"%@", snsLeader]]){
        if(section == 3) {
            UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, self.view.frame.size.width, 45)];
            label.textAlignment = NSTextAlignmentCenter;
            label.font = [UIFont systemFontOfSize:15];
            label.backgroundColor = [UIColor whiteColor];
            label.text = @"게시판 삭제";
            label.textColor = [UIColor redColor];
            
            UITapGestureRecognizer *deleteTap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(tapDeleteBoard:)];
            [label setUserInteractionEnabled:YES];
            [label addGestureRecognizer:deleteTap];
            
            return label;
        }
    } else {
        if(![[NSString stringWithFormat:@"%@", snsLeader] isEqualToString:appDelegate.adminNo1] && ![[NSString stringWithFormat:@"%@", snsLeader] isEqualToString:appDelegate.adminNo2]){
            if(section == 2) {
                UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, self.view.frame.size.width, 45)];
                label.textAlignment = NSTextAlignmentCenter;
                label.font = [UIFont systemFontOfSize:15];
                label.backgroundColor = [UIColor whiteColor];
                label.text = @"게시판 탈퇴";
                label.textColor = [UIColor redColor];
                
                UITapGestureRecognizer *leaveTap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(tapLeaveBoard:)];
                [label setUserInteractionEnabled:YES];
                [label addGestureRecognizer:leaveTap];
                
                return label;
            }
        }
    }
    
    return nil;
}

- (NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section {
    //    if(section == 0) {
    //        return @"게시판 정보";
    //    } else if(section == 1) {
    //        return @"게시판 설정";
    //    } else if(section == 2) {
    //        return @"알림 설정";
    //    } else{
    //        return nil;
    //    }
    
    if([[NSString stringWithFormat:@"%@", myUserNo] isEqualToString:[NSString stringWithFormat:@"%@", snsLeader]]){
        if(section == 0) {
            return @"게시판 정보";
        } else if(section == 1) {
            return @"게시판 설정";
        } else if(section == 2) {
            return @"알림 설정";
        }
    } else {
        if(section == 0) {
            return @"게시판 정보";
        } else if(section == 1) {
            return @"알림 설정";
        }
    }
    
    return nil;
}

- (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    return HEADER_HEIGHT;
}

- (CGFloat) tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
    return 5;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    //    if(section == 0){
    //        return infoKeyArr1.count;
    //
    //    } else if (section == 1){
    //        return infoKeyArr2.count;
    //
    //    } else if (section == 2){
    //        return infoKeyArr3.count;
    //
    //    } else {
    //        return 0;
    //    }
    
    if([[NSString stringWithFormat:@"%@", myUserNo] isEqualToString:[NSString stringWithFormat:@"%@", snsLeader]]){
        if(section == 0){
            return infoKeyArr1.count;
            
        } else if (section == 1){
            return infoKeyArr2.count;
            
        } else if (section == 2){
            return infoKeyArr3.count;
        }
        
    } else {
        if(section == 0){
            return infoKeyArr1.count;
            
        } else if (section == 1){
            return infoKeyArr3.count;
        }
    }
    
    return 0;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    //NSLog(@"%s",__func__);
    SNSInfoTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"SNSInfoTableViewCell"];
    
    if(cell == nil){
        cell = [[SNSInfoTableViewCell alloc] initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:@"SNSInfoTableViewCell"];
    }
    
    //    if(indexPath.section == 0){
    //        cell.keyLabel.text = [infoKeyArr1 objectAtIndex:indexPath.row];
    //        cell.valueLabel.text = [infoValArr1 objectAtIndex:indexPath.row];
    //        cell.accessoryType = UITableViewCellAccessoryNone;
    //        cell.selectionStyle = UITableViewCellSelectionStyleNone;
    //
    //    } else if(indexPath.section == 1){
    //        cell.keyLabel.text = [infoKeyArr2 objectAtIndex:indexPath.row];
    //        cell.valueLabel.text = nil;
    //        cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
    //        cell.selectionStyle = UITableViewCellSelectionStyleDefault;
    //
    //    } else if(indexPath.section == 2){
    //        cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
    //        cell.keyLabel.text = [infoKeyArr3 objectAtIndex:indexPath.row];
    //        cell.valueLabel.text = nil;
    //        cell.selectionStyle = UITableViewCellSelectionStyleDefault;
    //
    //    } else if(indexPath.section == 3){
    //        cell.accessoryType = UITableViewCellAccessoryNone;
    //        cell.keyLabel.text = nil;
    //        cell.valueLabel.text = nil;
    //        cell.selectionStyle = UITableViewCellSelectionStyleDefault;
    //
    //    } else {
    //
    //    }
    
    NSLog(@"myUserNo : %@, snsLeader : %@", myUserNo, snsLeader);
    if([[NSString stringWithFormat:@"%@", myUserNo] isEqualToString:[NSString stringWithFormat:@"%@", snsLeader]]){
        if(indexPath.section == 0){
            cell.cntLabel.hidden = YES;
            cell.keyLabel.text = [infoKeyArr1 objectAtIndex:indexPath.row];
            cell.valueLabel.text = [infoValArr1 objectAtIndex:indexPath.row];
            NSLog(@"infoValArr1 : %@", infoValArr1);
            cell.accessoryType = UITableViewCellAccessoryNone;
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            
        } else if(indexPath.section == 1){
            cell.cntLabel.hidden = YES;
            cell.keyLabel.text = [infoKeyArr2 objectAtIndex:indexPath.row];
            cell.valueLabel.text = nil;
            cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
            cell.selectionStyle = UITableViewCellSelectionStyleDefault;
            
            if(indexPath.row == 2){
                NSString *waitingCnt = [NSString stringWithFormat:@"%@",[self.snsInfoDic objectForKey:@"WAITING_USER_COUNT"]];
                if([waitingCnt intValue]>0){
                    cell.cntLabel.hidden = NO;
                    cell.cntLabel.text = waitingCnt;
                    cell.cntLabel.textAlignment = NSTextAlignmentRight;
                    cell.cntLabel.textColor = [UIColor blueColor];
                }
            }
            
        } else if(indexPath.section == 2){
            cell.cntLabel.hidden = YES;
            cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
            cell.keyLabel.text = [infoKeyArr3 objectAtIndex:indexPath.row];
            cell.valueLabel.text = nil;
            cell.selectionStyle = UITableViewCellSelectionStyleDefault;
            
        } else if(indexPath.section == 3){
            cell.cntLabel.hidden = YES;
            cell.accessoryType = UITableViewCellAccessoryNone;
            cell.keyLabel.text = nil;
            cell.valueLabel.text = nil;
            cell.selectionStyle = UITableViewCellSelectionStyleDefault;
        }
    } else {
        cell.cntLabel.hidden = YES;
        if(![[NSString stringWithFormat:@"%@", snsLeader] isEqualToString:appDelegate.adminNo1] && ![[NSString stringWithFormat:@"%@", snsLeader] isEqualToString:appDelegate.adminNo2]){
            if(indexPath.section == 0){
                cell.keyLabel.text = [infoKeyArr1 objectAtIndex:indexPath.row];
                cell.valueLabel.text = [infoValArr1 objectAtIndex:indexPath.row];
                cell.accessoryType = UITableViewCellAccessoryNone;
                cell.selectionStyle = UITableViewCellSelectionStyleNone;
                
            } else if(indexPath.section == 1){
                cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
                cell.keyLabel.text = [infoKeyArr3 objectAtIndex:indexPath.row];
                cell.valueLabel.text = nil;
                cell.selectionStyle = UITableViewCellSelectionStyleDefault;
                
            } else if(indexPath.section == 2){
                cell.accessoryType = UITableViewCellAccessoryNone;
                cell.keyLabel.text = nil;
                cell.valueLabel.text = nil;
                cell.selectionStyle = UITableViewCellSelectionStyleDefault;
                
            }
        } else {
            if(indexPath.section == 0){
                cell.keyLabel.text = [infoKeyArr1 objectAtIndex:indexPath.row];
                cell.valueLabel.text = [infoValArr1 objectAtIndex:indexPath.row];
                cell.accessoryType = UITableViewCellAccessoryNone;
                cell.selectionStyle = UITableViewCellSelectionStyleNone;
                
            } else if(indexPath.section == 1){
                cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
                cell.keyLabel.text = [infoKeyArr3 objectAtIndex:indexPath.row];
                cell.valueLabel.text = nil;
                cell.selectionStyle = UITableViewCellSelectionStyleDefault;
                
            }
        }
    }
    
    cell.backgroundColor = [UIColor whiteColor];
    [cell.keyLabel sizeToFit];
    //[cell.valueLabel sizeToFit];
    
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    //    if(indexPath.section==1){
    //        if(indexPath.row==0){
    //            [self performSegueWithIdentifier:@"BOARD_MODIFY_PUSH" sender:nil];
    //        } else if(indexPath.row==1){
    //
    //        } else if(indexPath.row==2){
    //
    //        } else {}
    //
    //    } else if(indexPath.section==2){
    //        [self performSegueWithIdentifier:@"BOARD_SET_ALARM_PUSH" sender:indexPath];
    //    }
    
    if([[NSString stringWithFormat:@"%@", myUserNo] isEqualToString:[NSString stringWithFormat:@"%@", snsLeader]]){
        if(indexPath.section==1){
            mode = nil;
            
            if(indexPath.row==0){
                [self performSegueWithIdentifier:@"BOARD_MODIFY_PUSH" sender:nil];
                
            } else if(indexPath.row==1){
                //멤버 관리 (강제탈퇴)
                mode = @"MEMBER_WITHDRAW";
                [self performSegueWithIdentifier:@"BOARD_MEMBER_WITHDRAW_PUSH" sender:nil];
                
            } else if(indexPath.row==2){
                //가입신청 목록
                mode = @"MEMBER_REQUEST";
                [self performSegueWithIdentifier:@"BOARD_MEMBER_WITHDRAW_PUSH" sender:nil];
                
            } else {}
            
        } else if(indexPath.section==2){
            [self performSegueWithIdentifier:@"BOARD_SET_ALARM_PUSH" sender:indexPath];
        }
        
    } else {
        if(indexPath.section==1){
            [self performSegueWithIdentifier:@"BOARD_SET_ALARM_PUSH" sender:indexPath];
        }
    }
}

- (void)tapLeaveBoard:(id)sender{
    UIAlertController *alert = [UIAlertController alertControllerWithTitle:nil message:NSLocalizedString(@"board_info_create_secession1", @"board_info_create_secession1") preferredStyle:UIAlertControllerStyleAlert];
    
    UIAlertAction* okButton = [UIAlertAction actionWithTitle:@"확인" style:UIAlertActionStyleDefault
                                                     handler:^(UIAlertAction * action) {
                                                         [alert dismissViewControllerAnimated:YES completion:nil];
                                                         [self callWebService:@"withdrawSNS"];
                                                     }];
    
    UIAlertAction* cancelButton = [UIAlertAction actionWithTitle:@"취소" style:UIAlertActionStyleDefault
                                                         handler:^(UIAlertAction * action) {
                                                             [alert dismissViewControllerAnimated:YES completion:nil];
                                                         }];
    [alert addAction:okButton];
    [alert addAction:cancelButton];
    
    [self presentViewController:alert animated:YES completion:nil];
}

- (void)tapDeleteBoard:(id)sender{
    UIAlertController *alert = [UIAlertController alertControllerWithTitle:nil message:NSLocalizedString(@"board_info_create_secession2", @"board_info_create_secession2") preferredStyle:UIAlertControllerStyleAlert];
    
    UIAlertAction* okButton = [UIAlertAction actionWithTitle:@"확인" style:UIAlertActionStyleDefault
                                                     handler:^(UIAlertAction * action) {
                                                         [alert dismissViewControllerAnimated:YES completion:nil];
                                                         [self callWebService:@"deleteSNS"];
                                                     }];
    
    UIAlertAction* cancelButton = [UIAlertAction actionWithTitle:@"취소" style:UIAlertActionStyleDefault
                                                         handler:^(UIAlertAction * action) {
                                                             [alert dismissViewControllerAnimated:YES completion:nil];
                                                         }];
    [alert addAction:okButton];
    [alert addAction:cancelButton];
    
    [self presentViewController:alert animated:YES completion:nil];
}

- (void)noti_ModifyBoard:(NSNotification *)notification{
    NSLog(@"%s, userInfo : %@",__FUNCTION__, notification.userInfo);
    self.snsInfoDic = notification.userInfo;
    [self setTableData];
    [self.tableView reloadData];
    //[[NSNotificationCenter defaultCenter] removeObserver:self name:@"noti_ModifyBoard" object:nil];
}


#pragma mark - Navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    if([segue.identifier isEqualToString:@"BOARD_MODIFY_PUSH"]){
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(noti_ModifyBoard:) name:@"noti_ModifyBoard" object:nil];
        //UINavigationController *nav = segue.destinationViewController;
        //BoardCreateViewController *destination = [nav.childViewControllers objectAtIndex:0];
        
        BoardCreateViewController *destination = segue.destinationViewController;
        destination.fromSegue = segue.identifier;
        destination.snsInfoDic = self.snsInfoDic;
        destination.currSnsKind = currSnsKind;
        
        self.navigationController.navigationBar.topItem.title = @"";
        
    } else if([segue.identifier isEqualToString:@"BOARD_SET_ALARM_PUSH"]){
        self.navigationController.navigationBar.topItem.title = @"";
        
        SNSNoticeSetViewController *destination = segue.destinationViewController;
        destination.snsNo = [self.snsInfoDic objectForKey:@"SNS_NO"];
        destination.snsName = [NSString urlDecodeString:[self.snsInfoDic objectForKey:@"SNS_NM"]];
        
    } else if([segue.identifier isEqualToString:@"BOARD_MEMBER_WITHDRAW_PUSH"]){
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(noti_ModifyBoard:) name:@"noti_ModifyBoard" object:nil];
        MemberManageViewController *destination = segue.destinationViewController;
        destination.snsNo = [self.snsInfoDic objectForKey:@"SNS_NO"];
        destination.snsName = [NSString urlDecodeString:[self.snsInfoDic objectForKey:@"SNS_NM"]];
        destination.snsKind = [self.snsInfoDic objectForKey:@"SNS_KIND"];
        destination.snsInfoDic = self.snsInfoDic;
        destination.fromSegue = mode;
        self.navigationController.navigationBar.topItem.title = @"";
    }
}

- (UIImage *)getScaledImage:(UIImage *)image scaledToMaxWidth:(CGFloat)width {
    CGFloat oldWidth = image.size.width;
    CGFloat oldHeight = image.size.height;
    
    CGFloat scaleFactor=1;
    
    //if (oldWidth > width) {
    scaleFactor = width / oldWidth;
    //} else  //oldWidth<width and height==0이면, scale하지 않음.
    //    return image;
    
    CGFloat newHeight = oldHeight * scaleFactor;
    CGFloat newWidth = oldWidth * scaleFactor;
    CGSize newSize = CGSizeMake(newWidth, newHeight);
    
    //NSLog(@"oldWidth : %f, oldHeight : %f", oldWidth, oldHeight);
    //NSLog(@"newWidth : %f, newHeight : %f", newWidth, newHeight);
    
    //UIGraphicsBeginImageContext(newSize);
    UIGraphicsBeginImageContextWithOptions(newSize, NO, [UIScreen mainScreen].scale);
    [image drawInRect:CGRectMake(0, 0, newSize.width, newSize.height)];
    UIImage *newImage = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return newImage;
}

-(void)sendToHilee:(NSString *)func :(NSException *)exception{
    UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"" message:NSLocalizedString(@"exception_msg_exception", @"exception_msg_exception") preferredStyle:UIAlertControllerStyleAlert];
    UIAlertAction* sendButton = [UIAlertAction actionWithTitle:@"관리자에게 전송" style:UIAlertActionStyleDefault
                                                       handler:^(UIAlertAction * action) {
                                                           [alert dismissViewControllerAnimated:YES completion:nil];
                                                           
                                                           UIDevice *device = [UIDevice currentDevice];
                                                           NSString *myUserNo = [[NSUserDefaults standardUserDefaults] objectForKey:@"CUSER_NO"];
                                                           NSString *dvcKind = [device modelName];
                                                           NSString *dvcVer = device.systemVersion;
                                                           
                                                           MFMessageComposeViewController *controller = [[MFMessageComposeViewController alloc] init];
                                                           if([MFMessageComposeViewController canSendText])
                                                           {
                                                               controller.body = [NSString stringWithFormat:@"%@ / %@ / %@ \n%@ \n\n%@", dvcKind, dvcVer, myUserNo, func, exception];
                                                               controller.recipients = [NSArray arrayWithObject:@"01093917822"];
                                                               controller.messageComposeDelegate = self;
                                                               [self presentViewController:controller animated:YES completion:nil];
                                                           }
                                                       }];
    
    UIAlertAction* okButton = [UIAlertAction actionWithTitle:@"확인" style:UIAlertActionStyleDefault
                                                     handler:^(UIAlertAction * action) {
                                                         [alert dismissViewControllerAnimated:YES completion:nil];
                                                     }];
    
    [alert addAction:sendButton];
    [alert addAction:okButton];
    [self presentViewController:alert animated:YES completion:nil];
}

- (void)messageComposeViewController:(nonnull MFMessageComposeViewController *)controller didFinishWithResult:(MessageComposeResult)result {
    NSString *resultString;
    switch (result) {
        case MessageComposeResultCancelled:
            resultString = NSLocalizedString(@"cancel", @"");
            break;
            
        case MessageComposeResultFailed:
        {
            resultString = NSLocalizedString(@"fail", @"");
            break;
        }
            
        case MessageComposeResultSent:
            resultString = NSLocalizedString(@"success", @"");
            break;
            
        default:
            break;
    }
    [self dismissViewControllerAnimated:YES completion:^{
        NSLog(@"%s resultString : %@",__FUNCTION__,resultString);
    }];
}

@end
