//
//  RightSideViewController
//  mfinity_sns
//
//  Created by hilee on 2017. 5. 30..
//  Copyright © 2017년 com.dbvalley. All rights reserved.
//

#import "RightSideViewController.h"
#import "UIViewController+LGSideMenuController.h"
#import "ChatListViewController.h"
#import "DeptListViewController.h"
#import "UserListViewController.h"
#import "LGSideMenuController.h"
#import <QuartzCore/QuartzCore.h>
#import "RightSideViewCell.h"
#import "CollectionViewController.h"
#import "MFDBHelper.h"

#import "CustomHeaderViewController.h"

#define HEADER_HEIGHT 40
#define PROFILE_IMG_SIZE 35

@interface RightSideViewController () {
    NSDictionary *dict;
    UIImage *userImg;
    AppDelegate *appDelegate;
    NSMutableArray *existUserArr;
}

@property (strong, nonatomic) ChatMessageData *msgData;

@end

@implementation RightSideViewController
static NSString *CellIdentifier = @"Cell";

#pragma mark - UIViewController Methods -

- (id)initWithCoder:(NSCoder *)aDecoder
{
    NSLog(@"%s", __func__);
    //self.slideOutAnimationEnabled = YES;
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(noti_AddUser:) name:@"noti_AddUser" object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(noti_AddUserNewChatRoom:) name:@"noti_AddUserNewChatRoom" object:nil];
    
    appDelegate = (AppDelegate *)[UIApplication sharedApplication].delegate;
    
    NSLog(@"[RightSideViewController1] roomNo : %@", self.roomNo);
    self.userArr = [NSMutableArray array];
    existUserArr = [NSMutableArray array];
    
    NSArray *documentPaths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSString *documentsDir = [documentPaths objectAtIndex:0];
    self.DBName = [AppDelegate getDBName];
    self.DBPath = [documentsDir stringByAppendingPathComponent:self.DBName];
    
    [self readFromDatabase];
    
    return [super initWithCoder:aDecoder];
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.tableView.separatorColor = [UIColor lightGrayColor];
    self.tableView.delegate = self;
    self.tableView.dataSource = self;
}

- (void)viewWillAppear:(BOOL)animated {
    //[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(noti_AddUser:) name:@"noti_AddUser" object:nil];
    NSLog(@"[RightSideViewController2] roomNo : %@", self.roomNo);
    [super viewWillAppear:animated];
    [self.tabBarController.tabBar setHidden:YES];
    
    self.userArr = [NSMutableArray array];
    
    NSArray *documentPaths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSString *documentsDir = [documentPaths objectAtIndex:0];
    self.DBName = [AppDelegate getDBName];
    self.DBPath = [documentsDir stringByAppendingPathComponent:self.DBName];
    
    [self readFromDatabase];
}

- (void)viewDidAppear:(BOOL)animated{
    [super viewDidAppear:animated];
    //self.tableView.contentInset = UIEdgeInsetsMake(64,0,0,0);
}

- (void)noti_AddUserNewChatRoom:(NSNotification *)notification {
    NSLog(@"%s", __func__);
    [[NSNotificationCenter defaultCenter] postNotificationName:@"noti_MoveNewChatRoom"
                                                        object:nil
                                                      userInfo:notification.userInfo];
    
    [self.navigationController popToRootViewControllerAnimated:YES];
    //[[NSNotificationCenter defaultCenter] removeObserver:self name:@"noti_AddUserNewChatRoom" object:nil];
}

- (void)noti_AddUser:(NSNotification *)notification {
    NSLog(@"%s", __func__);
    [self readFromDatabase];
    //[[NSNotificationCenter defaultCenter] removeObserver:self name:@"noti_AddUser" object:nil];
}

- (void)checkAndCreateDatabase {
    NSFileManager *fileManager = [NSFileManager defaultManager];
    
    // 해당 경로에 데이터 베이스 파일이 존재하는지 확인한다.
    if ([fileManager fileExistsAtPath:self.DBPath]) {
        return;
    }
    
    // 데이터 베이스 파일이 없다면 번들(앱에 포함된 리소스)에서 데이터 베이스 파일을 복사한다.
    else {
        NSString *databasePathFromApp = [[[NSBundle mainBundle] bundlePath] stringByAppendingPathComponent:self.DBName];
        [fileManager copyItemAtPath:databasePathFromApp toPath:self.DBPath error:nil];
        //NSLog(@"###########################");
        return;
    }
}

-(void) selectStatement:(NSString *)dbPath :(NSString *)selectStmt{
    //NSLog(@"%s", __func__);
    sqlite3 *database;
    
    self.userArr = [NSMutableArray array];
    NSMutableDictionary *dic = nil;
    
    if (sqlite3_open([dbPath UTF8String], &database) == SQLITE_OK) {
        NSString *sql2 = selectStmt;
        const char *sqlStatement = [sql2 UTF8String];
        sqlite3_stmt *compiledStatement;
        
        if (sqlite3_prepare_v2(database, sqlStatement, -1, &compiledStatement, NULL) == SQLITE_OK) {
            
            int rowCount = 0;
            
            while(sqlite3_step(compiledStatement) == SQLITE_ROW) {
                rowCount = sqlite3_column_int(compiledStatement, 0);
                
                dic = [[NSMutableDictionary alloc]init];
                
                for(int j=0; j<sqlite3_column_count(compiledStatement);j++){
                    NSString *keyString = [NSString stringWithUTF8String:(sqlite3_column_name(compiledStatement, j))];
                    NSString *valueString = nil;
                    if (sqlite3_column_text(compiledStatement, j)==NULL) {
                        valueString = @"null";
                    }else{
                        valueString = [NSString stringWithUTF8String:(char *)sqlite3_column_text(compiledStatement, j)];
                    }
                    [dic setObject:valueString forKey:keyString];
                    
                    if([keyString isEqualToString:@"USER_NO"]){
                        [existUserArr addObject:[NSNumber numberWithInteger:[valueString integerValue]]];
                    }
                }
                //NSLog(@"dic : %@", dic);
                [self.userArr addObject:dic];
                //NSLog(@"### userArr : %@", self.userArr);
                [self.tableView reloadData];
            }
            
        }else {
            NSLog(@"not SQLITE_OK");
            printf("could not prepare statement: %s\n", sqlite3_errmsg(database));
        }
        sqlite3_finalize(compiledStatement);
        
    }else{
        NSLog(@"db not open");
    }
    sqlite3_close(database);
}


- (void)readFromDatabase {
    NSLog(@"readFromDatabase!!!");
    NSString *sqlString = [[NSString alloc] initWithString:[NSString stringWithFormat:@"SELECT A.* FROM USERS A, CHAT_USERS B WHERE A.USER_NO = B.USER_NO AND B.ROOM_NO = %@", _roomNo]];
    [self selectStatement:self.DBPath :sqlString];
    
}

#pragma mark - UITableView Delegate & Datasrouce -

-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 4;
}

- (NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section
{
    if(section == 0) {
        return [NSString stringWithFormat:@"대화상대 (%lu)", (unsigned long)self.userArr.count];
    } else if(section == 1) {
        return nil;
    } else if(section == 2){
        return @"설정";
    } else{
        return @"나가기";
    }
}

//-(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
//    UIView *view = [[UIView alloc]init];
//    [view setBackgroundColor:[UIColor whiteColor]];
//    return view;
//}

- (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    if(section == 0){
        return HEADER_HEIGHT;
    } else if (section == 1){
        return 0;
    } else if (section == 2){
        return HEADER_HEIGHT;
    } else {
        return HEADER_HEIGHT;
    }
}

- (CGFloat) tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
    if(section == 0){
        return 0;
    } else if (section == 1){
        return 5;
    } else if (section == 2){
        return 5;
    } else {
        return 1;
    }
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    if(section == 0){
        //NSLog(@"userArrCnt : %lu", (unsigned long)self.userArr.count);
        if(self.userArr.count>0) return self.userArr.count;
        else return 1;
        
    } else if (section == 1){
        //NSLog(@"userArr : %@", self.userArr);
        if(self.userArr.count==1){
            NSString *userNo = [[self.userArr objectAtIndex:0] objectForKey:@"USER_NO"];
            NSUserDefaults *prefs = [NSUserDefaults standardUserDefaults];
            NSString *myUserNo = [prefs objectForKey:@"CUSER_NO"];
            
            if([[NSString stringWithFormat:@"%@", userNo] isEqualToString:[NSString stringWithFormat:@"%@", myUserNo]]){
                return 0;
            }
        }
        return 1;
        
    } else {
        return 1;
    }
    
    return 0;
}

- (void)tableView:(UITableView *)tableView willDisplayHeaderView:(UIView *)view forSection:(NSInteger)section {
    UITableViewHeaderFooterView *header = (UITableViewHeaderFooterView *)view;
    
    UIView *lineView = [[UIView alloc] initWithFrame:CGRectMake(0, header.frame.size.height, header.frame.size.width, 1)];
    lineView.backgroundColor = [MFUtil myRGBfromHex:@"F1F2F3"];
    [header addSubview:lineView];
    
    if(section==0){
        header.tintColor = [MFUtil myRGBfromHex:@"1D4696"];
        header.textLabel.textColor = [UIColor whiteColor];
    } else {
        header.tintColor = [UIColor whiteColor];
        header.textLabel.textColor = [UIColor blackColor];
    }
    
    header.textLabel.font = [UIFont boldSystemFontOfSize:15];
    CGRect headerFrame = header.frame;
    header.textLabel.frame = headerFrame;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    return 50;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    //NSLog(@"%s", __func__);
    //NSLog(@"usrArr : %@", self.userArr);
    
    @try{
        if(self.userArr.count > 0){
            NSDictionary *userDict = [self.userArr objectAtIndex:indexPath.item];
            NSString *userName = [userDict objectForKey:@"USER_NM"];
            NSString *profileImg = [userDict objectForKey:@"USER_IMG"];
            
            RightSideViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"RightSideViewCell" forIndexPath:indexPath];
            
            if (cell == nil) {
                cell = [[RightSideViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"RightSideViewCell"];
            }
            
            self.tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
            cell.userImgView.image = nil;
            cell.userImgView.contentMode = UIViewContentModeScaleAspectFit;
            [cell.notiSwitch setOnTintColor:[MFUtil myRGBfromHex:@"1D4696"]];
            
            if(indexPath.section == 0){
                if(![profileImg isEqualToString:@""]){
                    //                NSRange range = [profileImg rangeOfString:@"/" options:NSBackwardsSearch];
                    //                NSString *profileName = [profileImg substringFromIndex:range.location+1];
                    //
                    //                NSString *tmpPath = NSTemporaryDirectory();
                    //                NSString *imagePath =[tmpPath stringByAppendingPathComponent:[NSString stringWithFormat:@"mThumb_%@",profileName]];
                    //                NSLog(@"RightSideView imagePath : %@", imagePath);
                    //
                    //                NSData *data = [NSData dataWithContentsOfFile:imagePath];
                    //                UIImage *image = [UIImage imageWithData:data];
                    //
                    //                userImg = [self imageByScalingAndCroppingForSize:CGSizeMake(50, 50) :image];
                    
                    MFDBHelper *dbHelper = [[MFDBHelper alloc]init];
                    userImg = [self imageByScalingAndCroppingForSize:CGSizeMake(50, 50) :[dbHelper saveThumbImage:@"profile" :profileImg]];
                    
                } else {
                    userImg = [UIImage imageNamed:@"profile_default.png"];
                }
                
                cell.notiSwitch.hidden = YES;
                cell.userNmLabel.text = userName;
                cell.userImgView.image = userImg;
                
                cell.userImgView.tag = indexPath.row;
                cell.userImgView.layer.cornerRadius = cell.userImgView.frame.size.width/2;
                cell.userImgView.clipsToBounds = YES;
                cell.userImgView.backgroundColor = [UIColor clearColor];
                cell.userImgView.layer.borderColor = [[UIColor lightGrayColor] CGColor];
                cell.userImgView.layer.borderWidth = 0.3;
                
                //UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(tapProfileOnTable:)];
                //[cell.userImgView addGestureRecognizer:tap];
                //cell.selectionStyle = UITableViewCellSelectionStyleNone;
                
            } else if (indexPath.section == 1) {
                cell.notiSwitch.hidden = YES;
                cell.userImgView.image = [UIImage imageNamed:@"btn_adduser.png"];
                cell.userImgView.layer.cornerRadius = 0;
                cell.userImgView.clipsToBounds = NO;
                cell.userNmLabel.text = @"대화상대 초대";
                
            } else if (indexPath.section == 2){
                cell.notiSwitch.hidden = NO;
                //cell.userImgView.image = [UIImage imageNamed:@"icon_alarm.png"];
                [cell.userImgView setImage:[self getScaledImage:[UIImage imageNamed:@"icon_alarm.png"] scaledToMaxWidth:15]];
                cell.userImgView.layer.cornerRadius = 0;
                cell.userImgView.clipsToBounds = NO;
                cell.userNmLabel.text = @"알림설정";
                
                if([self.roomNoti isEqualToString:@"1"]){
                    [cell.notiSwitch setOn:YES animated:NO];
                } else {
                    [cell.notiSwitch setOn:NO animated:NO];
                }
                [cell.notiSwitch addTarget:self action:@selector(switchToggled:) forControlEvents:UIControlEventValueChanged];
                
            } else {
                cell.notiSwitch.hidden = YES;
                //cell.userImgView.image = [UIImage imageNamed:@"icon_exit.png"];
                [cell.userImgView setImage:[self getScaledImage:[UIImage imageNamed:@"icon_exit.png"] scaledToMaxWidth:15]];
                cell.userImgView.layer.cornerRadius = 0;
                cell.userImgView.clipsToBounds = NO;
                cell.userNmLabel.text = @"채팅방 나가기";
            }
            
            return cell;
            
        } else {
            NSLog(@"[RightSideViewController] userArr is Nil");
        }
        return nil;
        
    } @catch(NSException *exception){
        NSLog(@"exception : %@", exception);
    }
}


//- (void)tapProfileOnTable:(UITapGestureRecognizer *)tap{
//    NSLog(@"%s", __func__);
//    [self performSegueWithIdentifier:@"CHAT_SIDE_PROFILE_MODAL" sender:nil];
//}


- (void)switchToggled:(id)sender {
    UISwitch *mySwitch = (UISwitch *)sender;
    NSUserDefaults *prefs = [NSUserDefaults standardUserDefaults];
    NSString *userNo = [prefs objectForKey:@"CUSER_NO"];
    
    if ([mySwitch isOn]) {
        NSString *urlString = appDelegate.main_url;
        NSString *paramString = [NSString stringWithFormat:@"usrNo=%@&notiFlag=1&refTy=3&refNo=%@", userNo, self.roomNo];
        NSURL *url = [NSURL URLWithString:[urlString stringByAppendingPathComponent:@"saveNotification"]];
        MFURLSession *session = [[MFURLSession alloc]initWithURL:url option:paramString];
        session.delegate = self;
        [session start];
        
        NSString *sqlString = [NSString stringWithFormat:@"UPDATE CHAT_ROOMS SET ROOM_NOTI=1 WHERE ROOM_NO=%@;", self.roomNo];
        [self crudStatement:self.DBPath :sqlString];
        
    } else {
        NSString *urlString = appDelegate.main_url;
        NSString *paramString = [NSString stringWithFormat:@"usrNo=%@&notiFlag=1&refTy=3&refNo=%@", userNo, self.roomNo];
        NSURL *url = [NSURL URLWithString:[urlString stringByAppendingPathComponent:@"saveNotification"]];
        MFURLSession *session = [[MFURLSession alloc]initWithURL:url option:paramString];
        session.delegate = self;
        [session start];
        
        NSString *sqlString = [NSString stringWithFormat:@"UPDATE CHAT_ROOMS SET ROOM_NOTI=0 WHERE ROOM_NO=%@;", self.roomNo];
        [self crudStatement:self.DBPath :sqlString];
    }
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    //NSLog(@"%s", __func__);
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    if(indexPath.section == 0){
        //[self performSegueWithIdentifier:@"CHAT_SIDE_PROFILE_MODAL" sender:indexPath];
        
        MFDBHelper *dbHelper = [[MFDBHelper alloc]init];
        NSString *sqlString = [NSString stringWithFormat:@"SELECT ROOM_TYPE FROM CHAT_ROOMS WHERE ROOM_NO = %@", self.roomNo];
        NSMutableArray *selectArr = [dbHelper selectQuery:sqlString];
        NSString *roomType = [[selectArr objectAtIndex:0]objectForKey:@"ROOM_TYPE"];
        //NSLog(@"roomType : %@", roomType);
        
        NSDictionary *dic = [self.userArr objectAtIndex:indexPath.row];
        NSString *userNo = [dic objectForKey:@"USER_NO"];
        
        CustomHeaderViewController *destination = [[CustomHeaderViewController alloc] initwithUserNo:userNo];
        destination.userNo = userNo;
        destination.fromSegue = @"CHAT_SIDE_PROFILE_MODAL";
        destination.chatRoomTy = roomType;
        
        destination.modalTransitionStyle = UIModalTransitionStyleCrossDissolve;
        [self presentViewController:destination animated:YES completion:nil];
        
        
    } else if(indexPath.section == 1){
        //[self performSegueWithIdentifier:@"CHAT_SIDE_ADD_USER_PUSH" sender:self];
        UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
        
        //NSDictionary *dic = [self.userArr objectAtIndex:indexPath.row];
        //NSString *userNo = [dic objectForKey:@"USER_NO"];
        
        NSLog(@"self.userArr.count : %lu", (unsigned long)self.userArr.count);
        if(self.userArr.count > 2){
            if(appDelegate.userListSortDept){
                //UINavigationController *destination = segue.destinationViewController;
                //DeptListViewController *vc = [[destination childViewControllers] objectAtIndex:0];
                
                DeptListViewController *destination = (DeptListViewController *)[storyboard instantiateViewControllerWithIdentifier:@"DeptListViewController"];
                UINavigationController *navController = [[UINavigationController alloc] initWithRootViewController:destination];
                
                destination.fromSegue = @"CHAT_SIDE_ADD_USER_PUSH";
                destination.roomNo = self.roomNo;
                destination.existUserArr = existUserArr;
                
                [self presentViewController:navController animated:YES completion:nil];
                
            } else {
                //UINavigationController *destination = segue.destinationViewController;
                //UserListViewController *vc = [[destination childViewControllers] objectAtIndex:0];
                
                UserListViewController *destination = (UserListViewController *)[storyboard instantiateViewControllerWithIdentifier:@"UserListViewController"];
                UINavigationController *navController = [[UINavigationController alloc] initWithRootViewController:destination];
                
                destination.fromSegue = @"CHAT_SIDE_ADD_USER_PUSH";
                destination.roomNo = self.roomNo;
                destination.existUserArr = existUserArr;
                
                [self presentViewController:navController animated:YES completion:nil];
            }
            
        } else {
            if(appDelegate.userListSortDept){
                //UINavigationController *destination = segue.destinationViewController;
                //DeptListViewController *vc = [[destination childViewControllers] objectAtIndex:0];
                
                DeptListViewController *destination = (DeptListViewController *)[storyboard instantiateViewControllerWithIdentifier:@"DeptListViewController"];
                UINavigationController *navController = [[UINavigationController alloc] initWithRootViewController:destination];
                
                destination.fromSegue = @"CHAT_SIDE_NEW_ROOM_PUSH";
                destination.userArr = self.userArr;
                destination.roomNo = self.roomNo;
                destination.existUserArr = existUserArr;
                
                [self presentViewController:navController animated:YES completion:nil];
                
            } else {
                //UINavigationController *destination = segue.destinationViewController;
                //UserListViewController *vc = [[destination childViewControllers] objectAtIndex:0];
                
                UserListViewController *destination = (UserListViewController *)[storyboard instantiateViewControllerWithIdentifier:@"UserListViewController"];
                UINavigationController *navController = [[UINavigationController alloc] initWithRootViewController:destination];
                
                destination.fromSegue = @"CHAT_SIDE_NEW_ROOM_PUSH";
                destination.userArr = self.userArr;
                destination.roomNo = self.roomNo;
                destination.existUserArr = existUserArr;
                
                [self presentViewController:navController animated:YES completion:nil];
            }
        }
        
    } else if(indexPath.section == 3){
        NSLog(@"exit select");
        UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"이 채팅방을 나가시겠습니까?" delegate:self cancelButtonTitle:@"취소" otherButtonTitles:@"확인", nil];
        [alert show];
    }
    
}

- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex {
    if(buttonIndex == 1){
        [self callDeleteChat];
    }
}

- (void)callDeleteChat{
    NSString *urlString = appDelegate.main_url;
    NSUserDefaults *prefs = [NSUserDefaults standardUserDefaults];
    NSString *compNo = [[NSUserDefaults standardUserDefaults] objectForKey:@"COMP_NO"];
    NSString *userID = [prefs objectForKey:@"USER_ID"];
    NSString *userNo = [prefs objectForKey:@"CUSER_NO"];
    NSString *dvcID = [[NSUserDefaults standardUserDefaults] objectForKey:@"DVC_ID"];//[MFUtil getUUID];
    NSUInteger memberCnt = self.userArr.count;
    
    if(memberCnt > 2){
        NSUserDefaults *prefs = [NSUserDefaults standardUserDefaults];
        NSString *userNm = [prefs objectForKey:@"USER_NM"];
        NSString *decodeUserNm = [NSString urlDecodeString:userNm];
        
        NSString *queueName = [NSString stringWithFormat:@"USER.%@.%@", userID, dvcID];
        NSString *routingKey = [NSString stringWithFormat:@"CHAT.%@.%@", compNo, self.roomNo];
        
        NSString *paramString = [NSString stringWithFormat:@"roomNo=%@&usrNo=%@&queueName=%@&routingKey=%@&usrNm=%@",self.roomNo, userNo, queueName, routingKey, decodeUserNm];
        NSURL *url = [NSURL URLWithString:[urlString stringByAppendingPathComponent:@"deleteChatUser"]];
        MFURLSession *session = [[MFURLSession alloc]initWithURL:url option:paramString];
        session.delegate = self;
        if ([session start]) {
            [SVProgressHUD show];
        }
    } else {
        [self.navigationController popViewControllerAnimated:YES];
        
        NSArray *documentPaths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
        NSString *documentsDir = [documentPaths objectAtIndex:0];
        NSString *DBName = [AppDelegate getDBName];
        NSString *DBPath = [documentsDir stringByAppendingPathComponent:DBName];
        
        NSString *sqlString1 = [NSString stringWithFormat:@"DELETE FROM MISSED_CHATS WHERE ROOM_NO = %@;", self.roomNo];
        [self crudStatement:DBPath :sqlString1];
        NSString *sqlString2 = [NSString stringWithFormat:@"DELETE FROM CHATS WHERE ROOM_NO = %@;", self.roomNo];
        [self crudStatement:DBPath :sqlString2];
        NSString *sqlString3 = [NSString stringWithFormat:@"DELETE FROM CHAT_USERS WHERE ROOM_NO = %@;", self.roomNo];
        [self crudStatement:DBPath :sqlString3];
        NSString *sqlString4 = [NSString stringWithFormat:@"DELETE FROM CHAT_ROOMS WHERE ROOM_NO = %@;", self.roomNo];
        [self crudStatement:DBPath :sqlString4];
        
        //        NSString *paramString = [NSString stringWithFormat:@"usrId=%@&usrNo=%@&roomNo=%@", userID, userNo, self.deleteRoomNo];
        //        NSURL *url = [NSURL URLWithString:[urlString stringByAppendingPathComponent:@"getRoomInfo"]];
        //        MFURLSession *session = [[MFURLSession alloc]initWithURL:url option:paramString];
        //        session.delegate = self;
        //        if ([session start]) {
        //            [SVProgressHUD show];
        //        }
        
        self.roomNo = nil;
    }
}

#pragma mark - MFURLSessionDelegate
- (void)returnDataWithObject:(MFURLSession *)session error:(NSString *)error{
    [SVProgressHUD dismiss];
    
    NSString *wsName = [[session.url absoluteString] lastPathComponent];
    //NSLog(@"wsName : %@",wsName);
    
    if (error!=nil || ![error isEqualToString:@"(null)"]) {
        NSDictionary *dic = session.returnDictionary;
        if ([[dic objectForKey:@"RESULT"]isEqualToString:@"SUCCESS"]) {
            if ([wsName isEqualToString:@"deleteChatUser"]) {
                [self.navigationController popViewControllerAnimated:YES];
                
                NSArray *documentPaths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
                NSString *documentsDir = [documentPaths objectAtIndex:0];
                NSString *DBName = [AppDelegate getDBName];
                NSString *DBPath = [documentsDir stringByAppendingPathComponent:DBName];
                
                NSString *sqlString1 = [NSString stringWithFormat:@"DELETE FROM MISSED_CHATS WHERE ROOM_NO = %@;", self.roomNo];
                [self crudStatement:DBPath :sqlString1];
                NSString *sqlString2 = [NSString stringWithFormat:@"DELETE FROM CHATS WHERE ROOM_NO = %@;", self.roomNo];
                [self crudStatement:DBPath :sqlString2];
                NSString *sqlString3 = [NSString stringWithFormat:@"DELETE FROM CHAT_USERS WHERE ROOM_NO = %@;", self.roomNo];
                [self crudStatement:DBPath :sqlString3];
                NSString *sqlString4 = [NSString stringWithFormat:@"DELETE FROM CHAT_ROOMS WHERE ROOM_NO = %@;", self.roomNo];
                [self crudStatement:DBPath :sqlString4];
                
            }
        }
    }
}

-(void) crudStatement:(NSString *)dbPath :(NSString *)crudStmt{
    //NSLog(@"%s", __func__);
    sqlite3 *database;
    //NSLog(@"crudStmt : %@", crudStmt);
    if (sqlite3_open([dbPath UTF8String], &database) == SQLITE_OK) {
        const char *sqlStatement = [crudStmt UTF8String];
        
        sqlite3_stmt *compiledStatement;
        if (sqlite3_prepare_v2(database, sqlStatement, -1, &compiledStatement, NULL) == SQLITE_OK) {
            
            if(sqlite3_step(compiledStatement) != SQLITE_DONE){
                NSLog(@"Error updating table: %s", sqlite3_errmsg(database));
                
            }else{
                NSLog(@"RightSideViewController ok");
            }
            
            if(sqlite3_finalize(compiledStatement) != SQLITE_OK){
                NSLog(@"SQL Error : %s",sqlite3_errmsg(database));
            }
        }else {
            NSLog(@"not SQLITE_OK");
            printf("could not prepare statement: %s\n", sqlite3_errmsg(database));
        }
    }else{
        
    }
    sqlite3_close(database);
}

#pragma mark - Navigation
// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    /* if ([[segue identifier] isEqualToString:@"CHAT_SIDE_ADD_USER_PUSH"]) {
     //NSLog(@"userArr : %lu", self.userArr.count);
     
     if(self.userArr.count > 2){
     if(appDelegate.userListSortDept){
     UINavigationController *destination = segue.destinationViewController;
     DeptListViewController *vc = [[destination childViewControllers] objectAtIndex:0];
     vc.fromSegue = segue.identifier;
     vc.roomNo = self.roomNo;
     } else {
     UINavigationController *destination = segue.destinationViewController;
     UserListViewController *vc = [[destination childViewControllers] objectAtIndex:0];
     vc.fromSegue = segue.identifier;
     vc.roomNo = self.roomNo;
     }
     
     } else {
     if(appDelegate.userListSortDept){
     UINavigationController *destination = segue.destinationViewController;
     DeptListViewController *vc = [[destination childViewControllers] objectAtIndex:0];
     vc.fromSegue = @"CHAT_SIDE_NEW_ROOM_PUSH";
     vc.userArr = self.userArr;
     vc.roomNo = self.roomNo;
     } else {
     UINavigationController *destination = segue.destinationViewController;
     UserListViewController *vc = [[destination childViewControllers] objectAtIndex:0];
     vc.fromSegue = @"CHAT_SIDE_NEW_ROOM_PUSH";
     vc.userArr = self.userArr;
     vc.roomNo = self.roomNo;
     }
     }
     
     } else if ([segue.identifier isEqualToString:@"CHAT_SIDE_PROFILE_MODAL"]) {
     MFDBHelper *dbHelper = [[MFDBHelper alloc]init];
     NSString *sqlString = [NSString stringWithFormat:@"SELECT ROOM_TYPE FROM CHAT_ROOMS WHERE ROOM_NO = %@", self.roomNo];
     NSMutableArray *selectArr = [dbHelper selectQuery:sqlString];
     NSString *roomType = [[selectArr objectAtIndex:0]objectForKey:@"ROOM_TYPE"];
     //NSLog(@"roomType : %@", roomType);
     
     ProfileViewController *destination = segue.destinationViewController;
     destination.modalTransitionStyle = UIModalTransitionStyleCrossDissolve;
     
     NSIndexPath *indexPath = sender;
     NSDictionary *dic = [self.userArr objectAtIndex:indexPath.row];
     NSString *userNo = [dic objectForKey:@"USER_NO"];
     
     //NSUInteger memberCnt = self.userArr.count;
     //destination.sideMemberCnt = memberCnt;
     
     destination.userNo = userNo;
     destination.fromSegue = segue.identifier;
     destination.chatRoomTy = roomType;
     }*/
}


- (UIImage*)imageByScalingAndCroppingForSize:(CGSize)targetSize :(UIImage *)image
{
    UIImage *sourceImage = image;
    UIImage *newImage = nil;
    CGSize imageSize = sourceImage.size;
    CGFloat width = imageSize.width;
    CGFloat height = imageSize.height;
    CGFloat targetWidth = targetSize.width;
    CGFloat targetHeight = targetSize.height;
    CGFloat scaleFactor = 0.0;
    CGFloat scaledWidth = targetWidth;
    CGFloat scaledHeight = targetHeight;
    CGPoint thumbnailPoint = CGPointMake(0.0,0.0);
    
    if (CGSizeEqualToSize(imageSize, targetSize) == NO)
    {
        CGFloat widthFactor = targetWidth / width;
        CGFloat heightFactor = targetHeight / height;
        
        if (widthFactor > heightFactor)
            scaleFactor = widthFactor; // scale to fit height
        else
            scaleFactor = heightFactor; // scale to fit width
        scaledWidth  = width * scaleFactor;
        scaledHeight = height * scaleFactor;
        
        // center the image
        if (widthFactor > heightFactor)
        {
            thumbnailPoint.y = (targetHeight - scaledHeight) * 0.5;
        }
        else
            if (widthFactor < heightFactor)
            {
                thumbnailPoint.x = (targetWidth - scaledWidth) * 0.5;
            }
    }
    
    //UIGraphicsBeginImageContext(targetSize); // this will crop
    UIGraphicsBeginImageContextWithOptions(targetSize, NO, [UIScreen mainScreen].scale);
    
    CGRect thumbnailRect = CGRectZero;
    thumbnailRect.origin = thumbnailPoint;
    thumbnailRect.size.width  = scaledWidth;
    thumbnailRect.size.height = scaledHeight;
    
    [sourceImage drawInRect:thumbnailRect];
    
    newImage = UIGraphicsGetImageFromCurrentImageContext();
    if(newImage == nil)
        NSLog(@"could not scale image");
    
    UIGraphicsEndImageContext();
    
    return newImage;
}

- (UIImage *)getScaledImage:(UIImage *)image scaledToMaxWidth:(CGFloat)width {
    CGFloat oldWidth = image.size.width;
    CGFloat oldHeight = image.size.height;
    
    CGFloat scaleFactor=1;
    
    //if (oldWidth > width) {
    scaleFactor = width / oldWidth;
    //} else  //oldWidth<width and height==0이면, scale하지 않음.
    //    return image;
    
    CGFloat newHeight = oldHeight * scaleFactor;
    CGFloat newWidth = oldWidth * scaleFactor;
    CGSize newSize = CGSizeMake(newWidth, newHeight);
    
    //NSLog(@"oldWidth : %f, oldHeight : %f", oldWidth, oldHeight);
    //NSLog(@"newWidth : %f, newHeight : %f", newWidth, newHeight);
    
    //UIGraphicsBeginImageContext(newSize);
    UIGraphicsBeginImageContextWithOptions(newSize, NO, [UIScreen mainScreen].scale);
    [image drawInRect:CGRectMake(0, 0, newSize.width, newSize.height)];
    UIImage *newImage = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return newImage;
}


@end

