//
//  CustomHeaderViewController.m
//  ARSegmentPager
//
//  Created by August on 15/5/20.
//  Copyright (c) 2015å¹´ August. All rights reserved.
//

#import "CustomHeaderViewController.h"
#import "TableViewController.h"
#import "ProfileCommentViewController2.h"
#import "CustomHeader.h"
#import "TaskDetailViewController.h"

#define NAVBAR_CHANGE_POINT 50
#define REFRESH_HEADER_DEFAULT_HEIGHT               64.f
#define kSupplementaryViewID @"SUP_VIEW_ID"
#define MODEL_NAME [[UIDevice currentDevice] modelName]

void *CustomHeaderInsetObserver = &CustomHeaderInsetObserver;

@interface CustomHeaderViewController () {
    NSUInteger currPage;
    NSArray *vcArr;
    UINavigationBar *navBar;
    AppDelegate *appDelegate;
}

@property (nonatomic, strong) CustomHeader *header;

@end

@implementation CustomHeaderViewController

- (instancetype)initwithUserNo:(NSString *)userNo{
    _userNo = userNo;
    appDelegate = (AppDelegate *)[UIApplication sharedApplication].delegate;
    
    return [self init];
}

-(instancetype)init
{
    appDelegate = (AppDelegate *)[UIApplication sharedApplication].delegate;
    
    MFDBHelper *dbHelper = [[MFDBHelper alloc]init];
    NSMutableArray *selectUser = [dbHelper selectQuery:[NSString stringWithFormat:@"SELECT USER_NO, USER_ID, USER_NM, USER_IMG, USER_MSG, USER_PHONE, DEPT_NO, USER_BG_IMG FROM USERS WHERE USER_NO=%@", self.userNo]];
    NSLog(@"selectUser : %@", selectUser);
    
    currPage=0;
    
    if(selectUser.count==0){
        [self callGetProfile];
    } else {
        self.userName = [[selectUser objectAtIndex:0]objectForKey:@"USER_NM"];
        self.userID = [[selectUser objectAtIndex:0]objectForKey:@"USER_ID"];
        self.phoneNo = [[selectUser objectAtIndex:0]objectForKey:@"USER_PHONE"];
        self.imageFileName = [[selectUser objectAtIndex:0]objectForKey:@"USER_IMG"]; //origin
        self.statusMsg = [[selectUser objectAtIndex:0]objectForKey:@"USER_MSG"];
        self.bgImageFileName = [[selectUser objectAtIndex:0]objectForKey:@"USER_BG_IMG"]; //origin
    }
    
    UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
    TableViewController *vc1 = (TableViewController *)[storyboard instantiateViewControllerWithIdentifier:@"TableViewController"];
    ProfileCommentViewController2 *vc2 = (ProfileCommentViewController2 *)[storyboard instantiateViewControllerWithIdentifier:@"ProfileCommentViewController2"];
    
    //TableViewController *vc1 = [[TableViewController alloc] initWithNibName:@"TableViewController" bundle:nil];
    //ProfileCommentViewController2 *vc2 = [[ProfileCommentViewController2 alloc] initWithNibName:@"ProfileCommentViewController2" bundle:nil];
    //CollectionViewController2 *vc3 = [[CollectionViewController2 alloc] initWithNibName:@"CollectionViewController2" bundle:nil];
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(noti_NewPostPush:) name:@"noti_NewPostPush" object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(noti_NewTaskPush:) name:@"noti_NewTaskPush" object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(noti_NewChatPush:) name:@"noti_NewChatPush" object:nil];
    
    NSLog(@"userNo : %@", self.userNo);
    //    SqlSelectHelper *selectHelper = [[SqlSelectHelper alloc]init];
    //    NSMutableArray *selectUser = [selectHelper selectQuery:[NSString stringWithFormat:@"SELECT USER_NO, USER_ID, USER_NM, USER_IMG, USER_MSG, USER_PHONE, DEPT_NO, USER_BG_IMG FROM USERS WHERE USER_NO=%@", self.userNo]];
    
    
    vc1.userNo = self.userNo;
    vc1.userNm = self.userName;
    vc1.userImgPath = self.imageFileName;
    
    vc2.userNo = self.userNo;
    vc2.userNm = self.userName;
    
    //    vc3.userNo = self.userNo;
    //    vc3.userNm = self.userName;
    
    self = [super initWithControllers:vc1,vc2, nil];
    if (self) {
        // your code
        self.segmentMiniTopInset = 64;
        if (@available(iOS 11.0, *)) {
            self.segmentMiniTopInset = 84;
        }
        self.headerHeight = 305;
    }
    
    return self;
}

-(UIView<ARSegmentPageControllerHeaderProtocol> *)customHeaderView
{
    if (_header == nil) {
        _header = [[[NSBundle mainBundle] loadNibNamed:@"CustomHeader" owner:nil options:nil] lastObject];
        //_header.backgroundColor = [UIColor redColor];
    }
    //[_header.closeButton addTarget:self action:@selector(closeModal) forControlEvents:UIControlEventTouchUpInside];
    return _header;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    NSLog(@"%s", __func__);
    NSLog(@"CustomHeaderViewController fromSegue : %@", self.fromSegue);
    
    appDelegate = (AppDelegate *)[UIApplication sharedApplication].delegate;
    
    [self addObserver:self forKeyPath:@"segmentTopInset" options:NSKeyValueObservingOptionNew context:CustomHeaderInsetObserver];
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(noti_NewPostPush:) name:@"noti_NewPostPush" object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(noti_NewTaskPush:) name:@"noti_NewTaskPush" object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(noti_NewChatPush:) name:@"noti_NewChatPush" object:nil];
    
    NSLog(@"userNo : %@", self.userNo);
    //    SqlSelectHelper *selectHelper = [[SqlSelectHelper alloc]init];
    //    NSMutableArray *selectUser = [selectHelper selectQuery:[NSString stringWithFormat:@"SELECT USER_NO, USER_ID, USER_NM, USER_IMG, USER_MSG, USER_PHONE, DEPT_NO, USER_BG_IMG FROM USERS WHERE USER_NO=%@", self.userNo]];
    MFDBHelper *dbHelper = [[MFDBHelper alloc]init];
    NSMutableArray *selectUser = [dbHelper selectQuery:[NSString stringWithFormat:@"SELECT USER_NO, USER_ID, USER_NM, USER_IMG, USER_MSG, USER_PHONE, DEPT_NO, USER_BG_IMG FROM USERS WHERE USER_NO=%@", self.userNo]];
    NSLog(@"selectUser : %@", selectUser);
    
    currPage=0;
    
    if(selectUser.count==0){
        [self callGetProfile];
    } else {
        self.userName = [[selectUser objectAtIndex:0]objectForKey:@"USER_NM"];
        self.userID = [[selectUser objectAtIndex:0]objectForKey:@"USER_ID"];
        self.phoneNo = [[selectUser objectAtIndex:0]objectForKey:@"USER_PHONE"];
        self.imageFileName = [[selectUser objectAtIndex:0]objectForKey:@"USER_IMG"]; //origin
        self.statusMsg = [[selectUser objectAtIndex:0]objectForKey:@"USER_MSG"];
        self.bgImageFileName = [[selectUser objectAtIndex:0]objectForKey:@"USER_BG_IMG"]; //origin
        
        [self createItem];
        //[self createPageView];
    }
    
    //UIView *statusBar = [[[UIApplication sharedApplication] valueForKey:@"statusBarWindow"] valueForKey:@"statusBar"];
    //statusBar.backgroundColor = [UIColor clearColor];
}

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
    UIView *statusBar = [[[UIApplication sharedApplication] valueForKey:@"statusBarWindow"] valueForKey:@"statusBar"];
    statusBar.backgroundColor = [UIColor clearColor];
}

- (void)viewWillDisappear:(BOOL)animated {
    [super viewWillDisappear:animated];
}

-(void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary *)change context:(void *)context
{
    [super observeValueForKeyPath:keyPath ofObject:object change:change context:context];
    if (context == CustomHeaderInsetObserver) {
        CGFloat inset = [change[NSKeyValueChangeNewKey] floatValue];
        [self.header updateHeadPhotoWithTopInset:inset];
    }
}

-(void)dealloc {
    [self removeObserver:self forKeyPath:@"segmentTopInset"];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (void)closeModal{
    NSLog(@"%s", __func__);
    
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.1 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        [self dismissViewControllerAnimated:YES completion:nil];
        //UIView *statusBar = [[[UIApplication sharedApplication] valueForKey:@"statusBarWindow"] valueForKey:@"statusBar"];
        //statusBar.backgroundColor = [MFUtil myRGBfromHex:@"1D4696"];
        [[NSNotificationCenter defaultCenter] postNotificationName:@"naviNoti" object:nil];
    });
}

-(void)createItem{
    MFDBHelper *dbHelper = [[MFDBHelper alloc]init];
    //    navBar = [[UINavigationBar alloc] initWithFrame:CGRectMake(0, 0, self.view.frame.size.width, 64)];
    //    navBar.barTintColor = [MFUtil myRGBfromHex:@"1D4696"];
    //    [self.header addSubview:navBar];
    //    [navBar lt_setBackgroundColor:[UIColor clearColor]];

    [self.header.closeButton setImage:[self getScaledImage:[UIImage imageNamed:@"btn_close.png"] scaledToMaxWidth:20.0f] forState:UIControlStateNormal];
    [self.header.closeButton addTarget:self action:@selector(closeModal) forControlEvents:UIControlEventTouchUpInside];
    
    self.header.userNameLabel.text = self.userName;
    self.header.userStatusLabel.text = self.statusMsg;
    
    if(![self.imageFileName isEqualToString:@""]&&self.imageFileName!=nil){
        UIImage *userImg = [self imageByScalingAndCroppingForSize:CGSizeMake(120, 120) :[dbHelper saveThumbImage:@"profile" :self.imageFileName]];
        [self.header.profileImageButton setImage:userImg forState:UIControlStateNormal];
    } else {
        UIImage *userImg = [self imageByScalingAndCroppingForSize:CGSizeMake(120, 120) :[UIImage imageNamed:@"profile_default.png"]];
        [self.header.profileImageButton setImage:userImg forState:UIControlStateNormal];
    }
    
    if(![self.bgImageFileName isEqualToString:@""]&&![self.bgImageFileName isEqualToString:@"(null)"]&&self.bgImageFileName!=nil){
        UIImage *bgImg = [self imageByScalingAndCroppingForSize:CGSizeMake(self.header.profileBgImgView.frame.size.width, self.header.profileBgImgView.frame.size.height) :[dbHelper saveThumbImage:@"profileBg" :self.bgImageFileName]];
        self.header.profileBgImgView.image = bgImg;
    } else {
        UIImage *bgImg = [self imageByScalingAndCroppingForSize:CGSizeMake(self.header.profileBgImgView.frame.size.width, self.header.profileBgImgView.frame.size.height) :[UIImage imageNamed:@"profile_bg_default.png"]];
        self.header.profileBgImgView.image = bgImg;
    }
    
    [self.header.profileImageButton addTarget:self action:@selector(touchedProfileButton:) forControlEvents:UIControlEventTouchUpInside];
    
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(tapOnProfileBgImg:)];
    [self.header.profileBgImgView setUserInteractionEnabled:YES];
    [self.header.profileBgImgView addGestureRecognizer:tap];
    
    
    NSUserDefaults *prefs = [NSUserDefaults standardUserDefaults];
    NSString *myUserNo = [prefs objectForKey:@"CUSER_NO"];
    
    if(![[NSString stringWithFormat:@"%@", myUserNo] isEqualToString:[NSString stringWithFormat:@"%@", self.userNo]]){
        //NSLog(@"ProfileViewController sideMemCnt : %lu", (unsigned long)self.sideMemberCnt);
        
        self.header.menuButton1.layer.cornerRadius = self.header.menuButton1.frame.size.width/20;
        self.header.menuButton1.clipsToBounds = YES;
        [self.header.menuButton1.layer setBorderWidth:0.5];
        [self.header.menuButton1.layer setBorderColor:[[MFUtil myRGBfromHex:@"1D4696"] CGColor]];
        [self.header.menuButton1 setBackgroundColor:[UIColor clearColor]];
        [self.header.menuButton1 setImage:[self getScaledImage:[UIImage imageNamed:@"tabmenu_talk_over.png"] scaledToMaxWidth:22.0f] forState:UIControlStateNormal];
        [self.header.menuButton1 setImageEdgeInsets:UIEdgeInsetsMake(5.0, 0.0, 5.0, 20.0)];
        [self.header.menuButton1 setTitleEdgeInsets:UIEdgeInsetsMake(0.0, 10.0, 0.0, 0.0)];
        [self.header.menuButton1 setTitle:@"1 : 1 ëí" forState:UIControlStateNormal];
        [self.header.menuButton1 addTarget:self action:@selector(touchedChatButton:) forControlEvents:UIControlEventTouchUpInside];
        
        self.header.menuButton2.layer.cornerRadius = self.header.menuButton2.frame.size.width/20;
        self.header.menuButton2.clipsToBounds = YES;
        [self.header.menuButton2.layer setBorderWidth:0.5];
        [self.header.menuButton2.layer setBorderColor:[[MFUtil myRGBfromHex:@"1D4696"] CGColor]];
        [self.header.menuButton2 setBackgroundColor:[UIColor clearColor]];
        [self.header.menuButton2 setImage:[self getScaledImage:[UIImage imageNamed:@"btn_call.png"] scaledToMaxWidth:22.0f] forState:UIControlStateNormal];
        [self.header.menuButton2 setImageEdgeInsets:UIEdgeInsetsMake(5.0, 0.0, 5.0, 20.0)];
        [self.header.menuButton2 setTitleEdgeInsets:UIEdgeInsetsMake(0.0, 10.0, 0.0, 0.0)];
        [self.header.menuButton2 setTitle:@"ì íê±¸ê¸°" forState:UIControlStateNormal];
        [self.header.menuButton2 removeTarget:self action:@selector(touchedMyInfoButton:) forControlEvents:UIControlEventTouchUpInside];
        [self.header.menuButton2 addTarget:self action:@selector(touchedCallButton:) forControlEvents:UIControlEventTouchUpInside];
        
        self.header.menuButton3.hidden=YES;
        
        if([self.fromSegue isEqualToString:@"CHAT_PROFILE_MODAL"]||[self.fromSegue isEqualToString:@"CHAT_SIDE_PROFILE_MODAL"]){
            if([self.chatRoomTy isEqualToString:@"1"]){
                //1:1ì±í
                self.header.menuButton1.hidden=YES;
                self.header.menuButton2.hidden=NO;
                self.header.menuButton3.hidden=YES;
                
                [self.header.menuButton2 setFrame:CGRectMake(self.header.menuButton3.frame.origin.x, self.header.menuButton3.frame.origin.y, self.header.menuButton3.frame.size.width, self.header.menuButton2.frame.size.height)];
                
                self.header.menuButton2.layer.cornerRadius = self.header.menuButton2.frame.size.width/35;
                
            } else if([self.chatRoomTy isEqualToString:@"2"]){
                //ë¨ì²´ì±í
                self.header.menuButton1.hidden=NO;
                self.header.menuButton2.hidden=NO;
                self.header.menuButton3.hidden=YES;
                
            } /*else if([self.chatRoomTy isEqualToString:@"3"]){
               //ëììì±í
               self.menuButton1.hidden=YES;
               self.menuButton2.hidden=YES;
               self.menuButton3.hidden=NO;
               }*/
        }
        
    } else {
        self.header.menuButton1.layer.cornerRadius = self.header.menuButton1.frame.size.width/20;
        self.header.menuButton1.clipsToBounds = YES;
        [self.header.menuButton1.layer setBorderWidth:0.5];
        [self.header.menuButton1.layer setBorderColor:[[MFUtil myRGBfromHex:@"1D4696"] CGColor]];
        [self.header.menuButton1 setBackgroundColor:[UIColor clearColor]];
        [self.header.menuButton1 setImage:[self getScaledImage:[UIImage imageNamed:@"tabmenu_talk_over.png"] scaledToMaxWidth:22.0f] forState:UIControlStateNormal];
        [self.header.menuButton1 setImageEdgeInsets:UIEdgeInsetsMake(5.0, 0.0, 5.0, 20.0)];
        [self.header.menuButton1 setTitleEdgeInsets:UIEdgeInsetsMake(0.0, 10.0, 0.0, 0.0)];
        [self.header.menuButton1 setTitle:@"ëìì ì±í" forState:UIControlStateNormal];
        [self.header.menuButton1 addTarget:self action:@selector(touchedChatButton:) forControlEvents:UIControlEventTouchUpInside];
        
        if([self.chatRoomTy isEqualToString:@"3"]){
            //ëììì±í
            self.header.menuButton3.layer.cornerRadius = self.header.menuButton3.frame.size.width/35;
            self.header.menuButton3.clipsToBounds = YES;
            [self.header.menuButton3.layer setBorderWidth:0.5];
            [self.header.menuButton3.layer setBorderColor:[[MFUtil myRGBfromHex:@"1D4696"] CGColor]];
            [self.header.menuButton3 setBackgroundColor:[UIColor clearColor]];
            [self.header.menuButton3 setImage:[self getScaledImage:[UIImage imageNamed:@"tabmenu_profile_over.png"] scaledToMaxWidth:22.0f] forState:UIControlStateNormal];
            [self.header.menuButton3 setImageEdgeInsets:UIEdgeInsetsMake(5.0, 0.0, 5.0, 20.0)];
            [self.header.menuButton3 setTitleEdgeInsets:UIEdgeInsetsMake(0.0, 10.0, 0.0, 0.0)];
            [self.header.menuButton3 setTitle:@"ë´ì ë³´ê´ë¦¬" forState:UIControlStateNormal];
            [self.header.menuButton3 addTarget:self action:@selector(touchedMyInfoButton:) forControlEvents:UIControlEventTouchUpInside];
            
            self.header.menuButton1.hidden=YES;
            self.header.menuButton2.hidden=YES;
            self.header.menuButton3.hidden=NO;
            
            [self.header.menuButton3 setFrame:CGRectMake(self.header.menuButton3.frame.origin.x, self.header.menuButton3.frame.origin.y, self.view.frame.size.width-(self.header.menuButton3.frame.origin.x*2), self.header.menuButton3.frame.size.height)];
            
        } else {
            self.header.menuButton2.layer.cornerRadius = self.header.menuButton2.frame.size.width/20;
            self.header.menuButton2.clipsToBounds = YES;
            [self.header.menuButton2.layer setBorderWidth:0.5];
            [self.header.menuButton2.layer setBorderColor:[[MFUtil myRGBfromHex:@"1D4696"] CGColor]];
            [self.header.menuButton2 setBackgroundColor:[UIColor clearColor]];
            [self.header.menuButton2 setImage:[self getScaledImage:[UIImage imageNamed:@"tabmenu_profile_over.png"] scaledToMaxWidth:22.0f] forState:UIControlStateNormal];
            [self.header.menuButton2 setImageEdgeInsets:UIEdgeInsetsMake(5.0, 0.0, 5.0, 20.0)];
            [self.header.menuButton2 setTitleEdgeInsets:UIEdgeInsetsMake(0.0, 10.0, 0.0, 0.0)];
            [self.header.menuButton2 setTitle:@"ë´ì ë³´ê´ë¦¬" forState:UIControlStateNormal];
            [self.header.menuButton2 removeTarget:self action:@selector(touchedCallButton:) forControlEvents:UIControlEventTouchUpInside];
            [self.header.menuButton2 addTarget:self action:@selector(touchedMyInfoButton:) forControlEvents:UIControlEventTouchUpInside];
            
            self.header.menuButton1.hidden=NO;
            self.header.menuButton2.hidden=NO;
            self.header.menuButton3.hidden=YES;
            
        }
    }
    
    //UIView *statusBar = [[[UIApplication sharedApplication] valueForKey:@"statusBarWindow"] valueForKey:@"statusBar"];
    //statusBar.backgroundColor = [UIColor clearColor];
    //[[UIApplication sharedApplication] setStatusBarHidden:YES];
    

}

- (void)noti_NewPostPush:(NSNotification *)notification {
    if(notification.userInfo!=nil){
        NSString *message = [notification.userInfo objectForKey:@"MESSAGE"];
        NSDictionary *dict = [NSDictionary dictionary];
        if(message!=nil){
            NSData *jsonData = [message dataUsingEncoding:NSUTF8StringEncoding];
            NSError *error;
            dict = [NSJSONSerialization JSONObjectWithData:jsonData options:kNilOptions error:&error];
        } else {
            dict = notification.userInfo;
        }
        
        UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
        PostDetailViewController *vc = (PostDetailViewController *)[storyboard instantiateViewControllerWithIdentifier:@"PostDetailViewController"];
        UINavigationController *nav = [[UINavigationController alloc] initWithRootViewController:vc];
        
        vc.fromSegue = @"NOTI_POST_DETAIL";
        vc.notiPostDic = dict;
        [self presentViewController:nav animated:YES completion:nil];
    }
}

- (void)noti_NewTaskPush:(NSNotification *)notification {
    @try{
        if(notification.userInfo!=nil){
            NSString *message = [notification.userInfo objectForKey:@"MESSAGE"];
            NSDictionary *dict = [NSDictionary dictionary];
            if(message!=nil){
                NSData *jsonData = [message dataUsingEncoding:NSUTF8StringEncoding];
                NSError *error;
                dict = [NSJSONSerialization JSONObjectWithData:jsonData options:kNilOptions error:&error];
            } else {
                dict = notification.userInfo;
            }
            
            UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
            TaskDetailViewController *vc = (TaskDetailViewController *)[storyboard instantiateViewControllerWithIdentifier:@"TaskDetailViewController"];
            UINavigationController *nav = [[UINavigationController alloc] initWithRootViewController:vc];
            
            vc.fromSegue = @"NOTI_TASK_DETAIL";
            vc.notiTaskDic = dict;
            [self presentViewController:nav animated:YES completion:nil];
        }
        
    } @catch (NSException *exception) {
        //[self sendToHilee:[NSString stringWithFormat:@"%s", __func__] :exception];
    }
}

- (void)noti_NewChatPush:(NSNotification *)notification {
    NSLog(@"%s", __func__);
    NSArray *documentPaths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSString *documentsDir = [documentPaths objectAtIndex:0];
    NSString *DBName = [AppDelegate getDBName];
    NSString *DBPath = [documentsDir stringByAppendingPathComponent:DBName];
    
    if(notification.userInfo!=nil){
        NSString *message = [notification.userInfo objectForKey:@"MESSAGE"];
        NSString *noti = [notification.userInfo objectForKey:@"NOTI"];
        NSDictionary *dict = [NSDictionary dictionary];
        if(noti==nil){
            NSData *jsonData = [message dataUsingEncoding:NSUTF8StringEncoding];
            NSError *error;
            dict = [NSJSONSerialization JSONObjectWithData:jsonData options:kNilOptions error:&error];
        } else {
            dict = notification.userInfo;
        }
        
        NSArray *dataSet = [dict objectForKey:@"DATASET"];
        NSString *roomNo = [[dataSet objectAtIndex:0] objectForKey:@"ROOM_NO"];
        
        NSMutableArray *roomChatArr = [NSMutableArray array];
        NSString *sqlString = [NSString stringWithFormat:@"SELECT ROOM_NM, ROOM_NOTI FROM CHAT_ROOMS WHERE ROOM_NO = %@", roomNo];
        sqlite3 *database;
        if (sqlite3_open([DBPath UTF8String], &database) == SQLITE_OK) {
            NSString *sql = sqlString;
            const char *sqlStatement = [sql UTF8String];
            sqlite3_stmt *compiledStatement;
            
            if (sqlite3_prepare_v2(database, sqlStatement, -1, &compiledStatement, NULL) == SQLITE_OK) {
                int rowCount = 0;
                
                while(sqlite3_step(compiledStatement) == SQLITE_ROW) {
                    rowCount = sqlite3_column_int(compiledStatement, 0);
                    
                    NSMutableDictionary *dic = [[NSMutableDictionary alloc]init];
                    
                    for(int j=0; j<sqlite3_column_count(compiledStatement);j++){
                        NSString *keyString = [NSString stringWithUTF8String:(sqlite3_column_name(compiledStatement, j))];
                        NSString *valueString = nil;
                        if (sqlite3_column_text(compiledStatement, j)==NULL) {
                            valueString = @"null";
                        }else{
                            valueString = [NSString stringWithUTF8String:(char *)sqlite3_column_text(compiledStatement, j)];
                        }
                        [dic setObject:valueString forKey:keyString];
                    }
                    [roomChatArr addObject:dic];
                }
            }else {
                NSLog(@"not SQLITE_OK");
                printf("could not prepare statement: %s\n", sqlite3_errmsg(database));
            }
            sqlite3_finalize(compiledStatement);
            
        }else{
            NSLog(@"db not open");
        }
        sqlite3_close(database);
        
        //NSLog(@"roomChatArr : %@", roomChatArr);
        UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
        ChatViewController *vc = (ChatViewController *)[storyboard instantiateViewControllerWithIdentifier:@"ChatViewController"];
        
        RightSideViewController *rightViewController = [self.storyboard instantiateViewControllerWithIdentifier:@"RightSideViewController"];
        CGRect screen = [[UIScreen mainScreen]bounds];
        CGFloat screenWidth = screen.size.width;
        CGFloat screenHeight = screen.size.height;
        rightViewController.view.frame = CGRectMake(rightViewController.view.frame.origin.x, rightViewController.view.frame.origin.y, screenWidth, screenHeight);
        
        if(roomChatArr.count>0){
            NSString *roomNoti = [[roomChatArr objectAtIndex:0]objectForKey:@"ROOM_NOTI"];
            NSString *roomName = [NSString urlDecodeString:[[roomChatArr objectAtIndex:0]objectForKey:@"ROOM_NM"]];
            vc.roomNo = roomNo;
            vc.roomNoti = roomNoti;
            vc.roomName = roomName;
            rightViewController.roomNo = roomNo;
            rightViewController.roomNoti = roomNoti;
        }
        
        LGSideMenuController *container = [LGSideMenuController sideMenuControllerWithRootViewController:vc leftViewController:nil rightViewController:rightViewController];
        [container setNavigationItemTitle:[NSString urlDecodeString:vc.roomName]];
        
        //UIBarButtonItem *left = [[UIBarButtonItem alloc]initWithTitle:@"" style:UIBarButtonItemStylePlain target:self action:nil];
        //self.navigationItem.backBarButtonItem = left;
        self.navigationController.navigationBar.topItem.title = @"";
        
        NSString *sqlString2 = [NSString stringWithFormat:@"UPDATE CHAT_ROOMS SET NEW_CHAT = 0 WHERE ROOM_NO=%@;", roomNo];
        [self crudStatement:DBPath :sqlString2];
        
        NSString *currentClass = NSStringFromClass([[UIViewController currentViewController] class]);
        NSString *chatDetailClass = NSStringFromClass([vc class]);
        
        vc.fromSegue = @"NOTI_CHAT_DETAIL";
        vc.notiChatDic = dict;
        
        if([currentClass isEqualToString:chatDetailClass]){
            //send notification to postdetail and if noti postno equal current postno, not open modal
            [[NSNotificationCenter defaultCenter] postNotificationName:@"noti_ChatDetailView" object:nil userInfo:dict];
        } else {
            NSString *strClass = NSStringFromClass([self class]);
            if([currentClass isEqualToString:strClass]){
                CATransition* transition = [CATransition animation];
                transition.duration = 0.3f;
                transition.type = kCATransitionMoveIn;
                transition.subtype = kCATransitionFromTop;
                [self.navigationController.view.layer addAnimation:transition forKey:kCATransition];
                [self.navigationController pushViewController:container animated:NO];
            }
        }
    }
}

-(void) crudStatement:(NSString *)dbPath :(NSString *)crudStmt{
    NSLog(@"%s", __func__);
    sqlite3 *database;
    NSLog(@"TeamListViewController crudStmt : %@", crudStmt);
    if (sqlite3_open([dbPath UTF8String], &database) == SQLITE_OK) {
        const char *sqlStatement = [crudStmt UTF8String];
        
        sqlite3_stmt *compiledStatement;
        if (sqlite3_prepare_v2(database, sqlStatement, -1, &compiledStatement, NULL) == SQLITE_OK) {
            
            if(sqlite3_step(compiledStatement) != SQLITE_DONE){
                NSLog(@"Error updating table: %s", sqlite3_errmsg(database));
                
            }else{
                NSLog(@"TeamListViewController ok");
            }
            
            if(sqlite3_finalize(compiledStatement) != SQLITE_OK){
                NSLog(@"SQL Error : %s",sqlite3_errmsg(database));
            }
        }else {
            NSLog(@"not SQLITE_OK");
            printf("could not prepare statement: %s\n", sqlite3_errmsg(database));
        }
    }else{
        
    }
    sqlite3_close(database);
}

-(void)menuButton1Click:(id)sender{
    NSLog(@"menuButton1Click");
}
-(void)menuButton2Click:(id)sender{
    NSLog(@"menuButton2Click");
}

-(IBAction)touchedCallButton:(id)sender{
    NSString *inValue = [self.phoneNo stringByReplacingOccurrencesOfString:@"-" withString:@""];
    [[UIApplication sharedApplication] openURL:[NSURL URLWithString:[NSString stringWithFormat:@"telprompt://%@",inValue]]];
    //[self dismissViewControllerAnimated:YES completion:nil];
}

-(IBAction)touchedChatButton:(id)sender{
    //[self dismissViewControllerAnimated:YES completion:nil];
    
    //    UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
    //    UITabBarController *rootViewController = [storyboard instantiateViewControllerWithIdentifier:@"tabBarController"];
    //    //rootViewController.selectedIndex = 2;
    //    rootViewController.selectedViewController = [rootViewController.viewControllers objectAtIndex:2];
    //    [self.navigationController pushViewController:rootViewController animated:YES];
    
    NSUserDefaults *prefs = [NSUserDefaults standardUserDefaults];
    NSString *myUserNo = [prefs objectForKey:@"CUSER_NO"];
    
    NSMutableArray *deptArr = [NSMutableArray array];
    NSMutableArray *userArr = [NSMutableArray array];
    [userArr addObject:myUserNo];
    [userArr addObject:self.userNo];
    
    NSMutableDictionary *resultDic = [[NSMutableDictionary alloc]init];
    [resultDic setObject:deptArr forKey:@"depts"];
    [resultDic setValue:userArr forKey:@"users"];
    
    [self callSaveChatInfo:resultDic];
    
    //    NSLog(@"imageFileName : %@", self.imageFileName);
    //    NSLog(@"userName : %@", self.userName);
    //    NSLog(@"phoneNo : %@", self.phoneNo);
    //    NSLog(@"userID : %@", self.userID);
    //    NSLog(@"userNo : %@", self.userNo);
    //    NSLog(@"statusMSG : %@", self.statusMSG);
}

-(IBAction)touchedMyInfoButton:(id)sender{
    NSLog(@"touchedMyInfoButton");
    //    [self performSegueWithIdentifier:@"PROFILE_TO_MY_MODAL" sender:nil];
    
    //    UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
    //    MyViewController *vc = (MyViewController *)[storyboard instantiateViewControllerWithIdentifier:@"MyViewController"];
    //    //UINavigationController *nav = (UINavigationController *)[storyboard instantiateViewControllerWithIdentifier:@"MypageNaviController"];
    //
    //    NSMutableDictionary *infoDic = [NSMutableDictionary dictionary];
    //    [infoDic setObject:self.userName forKey:@"USER_NM"];
    //    [infoDic setObject:self.imageFileName forKey:@"PROFILE_IMG"];
    //    [infoDic setObject:self.statusMsg forKey:@"PROFILE_MSG"];
    //    [infoDic setObject:self.bgImageFileName forKey:@"PROFILE_BACKGROUND_IMG"];
    //
    //    vc.infoDic = infoDic;
    //
    //    [self presentViewController:vc animated:YES completion:nil];
    
    UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
    MyViewController *vc = (MyViewController *)[storyboard instantiateViewControllerWithIdentifier:@"MyViewController"];
    NSLog(@"vc nav : %@", vc.parentViewController);
    
    UINavigationController *nav = [[UINavigationController alloc] initWithRootViewController:vc];
    
    NSMutableDictionary *infoDic = [NSMutableDictionary dictionary];
    [infoDic setObject:self.userName forKey:@"USER_NM"];
    [infoDic setObject:self.imageFileName forKey:@"PROFILE_IMG"];
    [infoDic setObject:self.statusMsg forKey:@"PROFILE_MSG"];
    [infoDic setObject:self.bgImageFileName forKey:@"PROFILE_BACKGROUND_IMG"];
    
    vc.infoDic = infoDic;
    vc.fromSegue = @"PROFILE_TO_MY_MODAL";
    [self presentViewController:nav animated:YES completion:nil];
}

-(IBAction)touchedSMSButton:(id)sender{
    //    MFMessageComposeViewController *controller = [[MFMessageComposeViewController alloc] init];
    //    NSMutableArray *array = [[NSMutableArray alloc]init];
    //
    //    NSString *inValue = [self.phoneNo stringByReplacingOccurrencesOfString:@"-" withString:@""];
    //    [array addObject:inValue];
    //    if([MFMessageComposeViewController canSendText])
    //    {
    //        //controller.body = msg;
    //        controller.recipients = array;
    //        controller.messageComposeDelegate = self;
    //        [self presentViewController:controller animated:YES completion:nil];
    //    }
}

- (void)callGetProfile {
    NSString *urlString = appDelegate.main_url;
    NSString *paramString = [NSString stringWithFormat:@"usrNo=%@", self.userNo];
    NSURL *url = [NSURL URLWithString:[urlString stringByAppendingPathComponent:@"getProfile"]];
    MFURLSession *session = [[MFURLSession alloc]initWithURL:url option:paramString];
    session.delegate = self;
    if ([session start]) {
        [SVProgressHUD show];
    }
}

- (void)callSaveChatInfo: (NSMutableDictionary *)dictionary {
    //saveChatInfo - usrId, attendants:{"depts":"[ë¶ì]","users":"[ì¬ì©ì]"}
    
    NSData* data = [NSJSONSerialization dataWithJSONObject:dictionary options:NSJSONWritingPrettyPrinted error:nil];
    NSString* jsonData = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];
    
    NSUserDefaults *prefs = [NSUserDefaults standardUserDefaults];
    NSString *userNo = [prefs objectForKey:@"CUSER_NO"];
    
    NSString *urlString = appDelegate.main_url;
    NSString *userID = [[NSUserDefaults standardUserDefaults] objectForKey:@"USER_ID"];
    NSString *paramString = [NSString stringWithFormat:@"usrId=%@&usrNo=%@&attendants=%@", userID, userNo, jsonData];
    NSURL *url = [NSURL URLWithString:[urlString stringByAppendingPathComponent:@"saveChatInfo"]];
    MFURLSession *session = [[MFURLSession alloc]initWithURL:url option:paramString];
    session.delegate = self;
    if ([session start]) {
        [SVProgressHUD show];
    }
}

#pragma mark - MFURLSessionDelegate
- (void)returnDataWithObject:(MFURLSession *)session error:(NSString *)error{
    [SVProgressHUD dismiss];
    
    NSString *wsName = [[session.url absoluteString] lastPathComponent];
    //NSLog(@"wsName : %@",wsName);
    
    if (error!=nil || ![error isEqualToString:@"(null)"]) {
        NSDictionary *dic = session.returnDictionary;
        //NSLog(@"chatdict: %@", dic);
        
        if ([[dic objectForKey:@"RESULT"]isEqualToString:@"SUCCESS"]) {
            if ([wsName isEqualToString:@"saveChatInfo"]) {
                NSDictionary *dataSet = [dic objectForKey:@"DATASET"];
                NSString *roomName = [dataSet objectForKey:@"ROOM_NM"];
                //NSString *decodeRoomName = [NSString urlDecodeString:roomName];
                NSString *roomNo = [dataSet objectForKey:@"ROOM_NO"];
                NSString *roomType = [dataSet objectForKey:@"ROOM_TYPE"];
                NSArray *users = [dataSet objectForKey:@"USERS"];
                
                NSMutableDictionary *newChatDic = [[NSMutableDictionary alloc]init];
                [newChatDic setObject:@"NEW_CHAT" forKey:@"TYPE"];
                [newChatDic setObject:roomNo forKey:@"NEW_ROOM_NO"];
                [newChatDic setObject:roomName forKey:@"NEW_ROOM_NM"];
                [newChatDic setObject:roomType forKey:@"NEW_ROOM_TY"];
                [newChatDic setObject:users forKey:@"NEW_USERS"];
                [newChatDic setObject:self.fromSegue forKey:@"FROM_SEGUE"];
                
                //                UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
                //                UITabBarController *rootViewController = [storyboard instantiateViewControllerWithIdentifier:@"tabBarController"];
                //
                //                UINavigationController *nav = [rootViewController.viewControllers objectAtIndex:2];
                //                ChatListViewController *vc = [nav.childViewControllers objectAtIndex:0];
                //                [self presentViewController:vc animated:YES completion:nil];
                
                NSLog(@"#### ProfileViewController fromSegue : %@", self.fromSegue);
                if([self.fromSegue isEqualToString:@"CHAT_SIDE_PROFILE_MODAL"]){
                    [self dismissViewControllerAnimated:YES completion:^(void){
                        [[NSNotificationCenter defaultCenter] postNotificationName:@"noti_SideProfileChat"
                                                                            object:nil
                                                                          userInfo:newChatDic];
                    }];
                    
                } else if([self.fromSegue isEqualToString:@"CHAT_PROFILE_MODAL"]){
                    [self dismissViewControllerAnimated:YES completion:^(void){
                        [[NSNotificationCenter defaultCenter] postNotificationName:@"noti_SideProfileChat"
                                                                            object:nil
                                                                          userInfo:newChatDic];
                    }];
                    
                } else if([self.fromSegue isEqualToString:@"BOARD_PROFILE_MODAL"] || [self.fromSegue isEqualToString:@"BOARD_MEMBER_PROFILE_MODAL"]){
                    [self dismissViewControllerAnimated:YES completion:^(void){
                        [[NSNotificationCenter defaultCenter] postNotificationName:@"noti_TeamProfileChat"
                                                                            object:nil
                                                                          userInfo:newChatDic];
                    }];
                    
                } else if([self.fromSegue isEqualToString:@"POST_PROFILE_MODAL"]){
                    [self dismissViewControllerAnimated:YES completion:^(void){
                        [[NSNotificationCenter defaultCenter] postNotificationName:@"noti_FeedProfileChat"
                                                                            object:nil
                                                                          userInfo:newChatDic];
                    }];
                    
                } else {
                    [self dismissViewControllerAnimated:YES completion:^(void){
                        [[NSNotificationCenter defaultCenter] postNotificationName:@"noti_PostProfileChat"
                                                                            object:nil
                                                                          userInfo:newChatDic];
                    }];
                }
            } else {
                //getProfile
                NSArray *dataSet = [dic objectForKey:@"DATASET"];
                NSLog(@"dataSet : %@", dataSet);
                
                self.userName = [NSString urlDecodeString:[[dataSet objectAtIndex:0] objectForKey:@"USER_NM"]];
                self.userID = [NSString urlDecodeString:[[dataSet objectAtIndex:0] objectForKey:@"CUSER_ID"]];
                self.phoneNo = [NSString urlDecodeString:[[dataSet objectAtIndex:0] objectForKey:@"PHONE_NO"]];
                self.imageFileName = [NSString urlDecodeString:[[dataSet objectAtIndex:0] objectForKey:@"PROFILE_IMG"]]; //origin
                self.statusMsg = [NSString urlDecodeString:[[dataSet objectAtIndex:0] objectForKey:@"PROFILE_MSG"]];
                self.bgImageFileName = [NSString urlDecodeString:[[dataSet objectAtIndex:0] objectForKey:@"PROFILE_BG_IMG"]]; //origin
                
                [self createItem];
                //[self createPageView];
            }
        }
    }
}

-(void)returnError:(MFURLSession *)session error:(NSError *)error{
    NSLog(@"error : %@", error);
}

-(void)messageComposeViewController:(MFMessageComposeViewController *)controller didFinishWithResult:(MessageComposeResult)result{
    NSString *resultString;
    switch (result) {
        case MessageComposeResultCancelled:
            resultString = NSLocalizedString(@"cancel", @"");
            break;
            
        case MessageComposeResultFailed:
        {
            resultString = NSLocalizedString(@"fail", @"");
            break;
        }
            
        case MessageComposeResultSent:
            resultString = NSLocalizedString(@"success", @"");
            break;
            
        default:
            break;
    }
    [self dismissViewControllerAnimated:YES completion:^{
        NSLog(@"%s resultString : %@",__FUNCTION__,resultString);
    }];
    
}
-(IBAction)touchedProfileButton:(id)sender{
    //NSLog(@"Profile ImageFileName : %@", self.imageFileName);
    
    JTSImageInfo *imageInfo = [[JTSImageInfo alloc] init];
    if ([self.imageFileName isEqualToString:@"-"] || [self.imageFileName isEqualToString:@""]) {
        //imageInfo.image = [UIImage imageNamed:@"user_96.png"];
    }else{
        NSRange range = [self.imageFileName rangeOfString:@"/" options:NSBackwardsSearch];
        NSString *thumbfileName = [self.imageFileName substringFromIndex:range.location+1];
        
        //self.imageFileNameê° ì¸ë¤ì¼ê²½ë¡ì´ë©´ thumbë¥¼ ì§ì°ê³  ìë³¸ì¼ë¡ ë³´ì¬ì£¼ê¸°ìí¨ (íì§ë§ ì´ë¯¸ self.imageFileNameì ìë³¸ê²½ë¡)
        self.imageFileName = [self.imageFileName stringByReplacingOccurrencesOfString:[NSString stringWithFormat:@"thumb/%@", thumbfileName] withString:[NSString stringWithFormat:@"%@", thumbfileName]];
        
        imageInfo.imageURL = [NSURL URLWithString:[self.imageFileName stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding]];
        
        JTSImageViewController *jtsImageViewer = [[JTSImageViewController alloc]
                                                  initWithImageInfo:imageInfo
                                                  mode:JTSImageViewControllerMode_Image
                                                  backgroundStyle:JTSImageViewControllerBackgroundOption_Scaled];
        [jtsImageViewer showFromViewController:self transition:JTSImageViewControllerTransition_FromOriginalPosition];
    }
    
    //    imageInfo.referenceRect = self.bigImageButton.frame;
    //    imageInfo.referenceView = self.bigImageButton.superview;
}
- (void)tapOnProfileBgImg:(UITapGestureRecognizer*)tap{
    NSLog(@"%s", __func__);
    JTSImageInfo *imageInfo = [[JTSImageInfo alloc] init];
    if ([self.bgImageFileName isEqualToString:@"-"] || [self.bgImageFileName isEqualToString:@""]) {
        //imageInfo.image = [UIImage imageNamed:@"user_96.png"];
    }else{
        NSRange range = [self.bgImageFileName rangeOfString:@"/" options:NSBackwardsSearch];
        NSString *thumbfileName = [self.bgImageFileName substringFromIndex:range.location+1];
        self.bgImageFileName = [self.bgImageFileName stringByReplacingOccurrencesOfString:[NSString stringWithFormat:@"thumb/%@", thumbfileName] withString:[NSString stringWithFormat:@"%@", thumbfileName]];
        
        imageInfo.imageURL = [NSURL URLWithString:[self.bgImageFileName stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding]];
        
        JTSImageViewController *jtsImageViewer = [[JTSImageViewController alloc]
                                                  initWithImageInfo:imageInfo
                                                  mode:JTSImageViewControllerMode_Image
                                                  backgroundStyle:JTSImageViewControllerBackgroundOption_Scaled];
        [jtsImageViewer showFromViewController:self transition:JTSImageViewControllerTransition_FromOriginalPosition];
    }
}

- (UIImage*)imageByScalingAndCroppingForSize:(CGSize)targetSize :(UIImage *)image
{
    
    UIImage *sourceImage = image;
    UIImage *newImage = nil;
    CGSize imageSize = sourceImage.size;
    CGFloat width = imageSize.width;
    CGFloat height = imageSize.height;
    CGFloat targetWidth = targetSize.width;
    CGFloat targetHeight = targetSize.height;
    CGFloat scaleFactor = 0.0;
    CGFloat scaledWidth = targetWidth;
    CGFloat scaledHeight = targetHeight;
    CGPoint thumbnailPoint = CGPointMake(0.0,0.0);
    
    if (CGSizeEqualToSize(imageSize, targetSize) == NO)
    {
        CGFloat widthFactor = targetWidth / width;
        CGFloat heightFactor = targetHeight / height;
        
        if (widthFactor > heightFactor)
            scaleFactor = widthFactor; // scale to fit height
        else
            scaleFactor = heightFactor; // scale to fit width
        scaledWidth  = width * scaleFactor;
        scaledHeight = height * scaleFactor;
        
        // center the image
        if (widthFactor > heightFactor)
        {
            thumbnailPoint.y = (targetHeight - scaledHeight) * 0.5;
        }
        else
            if (widthFactor < heightFactor)
            {
                thumbnailPoint.x = (targetWidth - scaledWidth) * 0.5;
            }
    }
    
    //UIGraphicsBeginImageContext(targetSize); // this will crop
    UIGraphicsBeginImageContextWithOptions(targetSize, NO, [UIScreen mainScreen].scale);
    
    CGRect thumbnailRect = CGRectZero;
    thumbnailRect.origin = thumbnailPoint;
    thumbnailRect.size.width  = scaledWidth;
    thumbnailRect.size.height = scaledHeight;
    
    [sourceImage drawInRect:thumbnailRect];
    
    newImage = UIGraphicsGetImageFromCurrentImageContext();
    if(newImage == nil)
        NSLog(@"could not scale image");
    
    //pop the context to get back to the default
    UIGraphicsEndImageContext();
    return newImage;
}

- (UIImage *)getScaledImage:(UIImage *)image scaledToMaxWidth:(CGFloat)width {
    CGFloat oldWidth = image.size.width;
    CGFloat oldHeight = image.size.height;
    
    CGFloat scaleFactor=1;
    
    //if (oldWidth > width) {
    scaleFactor = width / oldWidth;
    //} else  //oldWidth<width and height==0ì´ë©´, scaleíì§ ìì.
    //    return image;
    
    CGFloat newHeight = oldHeight * scaleFactor;
    CGFloat newWidth = oldWidth * scaleFactor;
    CGSize newSize = CGSizeMake(newWidth, newHeight);
    
    //NSLog(@"oldWidth : %f, oldHeight : %f", oldWidth, oldHeight);
    //NSLog(@"newWidth : %f, newHeight : %f", newWidth, newHeight);
    
    //UIGraphicsBeginImageContext(newSize);
    UIGraphicsBeginImageContextWithOptions(newSize, NO, [UIScreen mainScreen].scale);
    [image drawInRect:CGRectMake(0, 0, newSize.width, newSize.height)];
    UIImage *newImage = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return newImage;
}

/*
 #pragma mark - Tabbar View
 - (void)createPageView{
 UIPageViewController *pageController = [[UIPageViewController alloc]initWithTransitionStyle:UIPageViewControllerTransitionStyleScroll navigationOrientation:UIPageViewControllerNavigationOrientationHorizontal options:nil];
 pageController.delegate=self;
 pageController.dataSource=self;
 
 for(UIScrollView *svScroll in pageController.view.subviews){
 svScroll.delegate=self;
 }
 
 dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.1 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
 pageController.view.frame = CGRectMake(0, 0, self.contentView.frame.size.width, self.contentView.frame.size.height);
 //pageController.view.frame = CGRectMake(0, self.tabView.frame.origin.y+self.tabView.frame.size.height, self.view.frame.size.width, self.view.frame.size.height);
 });
 
 UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
 ProfilePostViewController *vc1 = (ProfilePostViewController *)[storyboard instantiateViewControllerWithIdentifier:@"ProfilePostViewController"];
 ProfileCommentViewController *vc2 = (ProfileCommentViewController *)[storyboard instantiateViewControllerWithIdentifier:@"ProfileCommentViewController"];
 ProfileFileViewController *vc3 = (ProfileFileViewController *)[storyboard instantiateViewControllerWithIdentifier:@"ProfileFileViewController"];
 
 vc1.userNo = self.userNo;
 vc1.userNm = self.userName;
 vc1.userImgPath = self.imageFileName;
 
 vc2.userNo = self.userNo;
 vc2.userNm = self.userName;
 
 vc3.userNo = self.userNo;
 vc3.userNm = self.userName;
 
 vcArr = @[vc1, vc2, vc3];
 
 [pageController setViewControllers:@[vc1] direction:UIPageViewControllerNavigationDirectionForward  animated:YES completion:nil];
 [self addChildViewController:pageController];
 [self.contentView addSubview:pageController.view];
 [pageController didMoveToParentViewController:self];
 }
 
 -(UIViewController *)pageViewController:(UIPageViewController *)pageViewController viewControllerBeforeViewController:(UIViewController *)viewController{
 NSUInteger index = [vcArr indexOfObject:viewController];
 
 if ((index == 0) || (index == NSNotFound)){
 return nil;
 }
 
 index--;
 
 return vcArr[index];
 }
 -(UIViewController *)pageViewController:(UIPageViewController *)pageViewController viewControllerAfterViewController:(UIViewController *)viewController{
 NSUInteger index = [vcArr indexOfObject:viewController];
 
 if (index == NSNotFound){
 return nil;
 }
 
 index++;
 
 if (index == vcArr.count){
 return nil;
 }
 
 return vcArr[index];
 }
 -(void)pageViewController:(UIPageViewController *)pageViewController didFinishAnimating:(BOOL)finished previousViewControllers:(NSArray<UIViewController *> *)previousViewControllers transitionCompleted:(BOOL)completed{
 if(completed){
 currPage = [vcArr indexOfObject:[pageViewController.viewControllers lastObject]];
 
 if(currPage==0){
 self.tabBtn1.titleLabel.textColor = [MFUtil myRGBfromHex:@"1D4696"];
 self.tabBtn2.titleLabel.textColor = [UIColor lightGrayColor];
 self.tabBtn3.titleLabel.textColor = [UIColor lightGrayColor];
 }
 else if(currPage == 1) {
 self.tabBtn1.titleLabel.textColor = [UIColor lightGrayColor];
 self.tabBtn2.titleLabel.textColor = [MFUtil myRGBfromHex:@"1D4696"];
 self.tabBtn3.titleLabel.textColor = [UIColor lightGrayColor];
 }
 else if(currPage == 2) {
 self.tabBtn1.titleLabel.textColor = [UIColor lightGrayColor];
 self.tabBtn2.titleLabel.textColor = [UIColor lightGrayColor];
 self.tabBtn3.titleLabel.textColor = [MFUtil myRGBfromHex:@"1D4696"];
 }
 }
 }
 -(void)resetTabBarForTag:(id)sender{
 //    UIButton *button = sender;
 //    if(button.tag==0){
 //        sender = self.tabBtn1;
 //    }
 //    else if(button.tag == 1) {
 //        sender = self.tabBtn2;
 //    }
 //    else if(button.tag == 2) {
 //        sender = self.tabBtn3;
 //    }
 //
 //    currPage = button.tag;
 //
 //    [_tabBtn1 setSelected:NO];
 //    [_tabBtn2 setSelected:NO];
 //    [_tabBtn3 setSelected:NO];
 //
 //    [button setSelected:YES];
 }
 
 
 //-(void)scrollViewDidScroll:(UIScrollView *)scrollView{
 //    CGFloat xFromCenter = self.view.frame.size.width-scrollView.contentOffset.x;
 //    CGFloat xCoor = _viewLine.frame.size.width * currPage;
 //    CGFloat xPosition = xCoor - xFromCenter/vcArr.count;
 //    [self.viewLine setFrame:CGRectMake(xPosition, self.viewLine.frame.origin.y, self.viewLine.frame.size.width, self.viewLine.frame.size.height)];
 //}
 */


#pragma mark - UIScrollView Delegate
- (void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate{
    //NSLog(@"%s", __func__);
    CGRect screen = [[UIScreen mainScreen]bounds];
    CGFloat screenWidth = screen.size.width;
    CGFloat screenHeight = screen.size.height;
    if ([MFUtil retinaDisplayCapable]) {
        screenHeight = screenHeight*2;
        screenWidth = screenWidth*2;
    }
    int height = 270;
    
    NSArray *tmp = [MODEL_NAME componentsSeparatedByString:@" "];
    if ([tmp[1] hasPrefix:@"5"]) {
        height = 370;
    }else if ([tmp[1] hasPrefix:@"6"] || [tmp[1] hasPrefix:@"7"] || [tmp[1] hasPrefix:@"8"] || [tmp[1] hasPrefix:@"X"]) {
        if (tmp.count==2) {
            height = 570;
        }else{
            height = 470;
        }
    }
    
    if (scrollView.contentSize.height-scrollView.contentOffset.y<self.view.frame.size.height) {
        CGPoint offset = scrollView.contentOffset;
        CGRect bounds = scrollView.bounds;
        CGSize size = scrollView.contentSize;
        UIEdgeInsets inset = scrollView.contentInset;
        float y = offset.y + bounds.size.height - inset.bottom;
        float h = size.height;
        
        float reload_distance = 10;
        
        if(y > h + reload_distance) {
            //ë°ì´í°ë¡ë
        }
    }
}

- (void)scrollViewDidScroll:(UIScrollView *)scrollView {
    CGFloat offsetY = scrollView.contentOffset.y;
    
    //    UIColor * color = [UIColor colorWithRed:29/255.0 green:70/255.0 blue:150/255.0 alpha:1];
    //    if (offsetY > NAVBAR_CHANGE_POINT) {
    //        CGFloat alpha = MIN(1, 1 - ((NAVBAR_CHANGE_POINT + 64 - offsetY) / 64));
    //        [self.navigationController.navigationBar lt_setBackgroundColor:[color colorWithAlphaComponent:alpha]];
    //        //self.navigationItem.titleView = nil;
    //        [self.navigationController.navigationBar setTitleTextAttributes:@{NSForegroundColorAttributeName:[UIColor whiteColor]}];
    //        self.navigationItem.title = @"ì´ë¦";
    //
    //    } else {
    //        [self.navigationController.navigationBar lt_setBackgroundColor:[color colorWithAlphaComponent:0]];
    //        //self.navigationItem.titleView = nil;
    //        self.navigationItem.title = @"";
    //    }
}

-(void)scrollViewWillBeginDragging:(UIScrollView *)scrollView {
    
}


- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    if ([segue.identifier isEqualToString:@"PROFILE_TO_MY_MODAL"]) {
        UINavigationController *destination = segue.destinationViewController;
        MyViewController *vc = [[destination childViewControllers] objectAtIndex:0];
        
        NSMutableDictionary *infoDic = [NSMutableDictionary dictionary];
        [infoDic setObject:self.userName forKey:@"USER_NM"];
        [infoDic setObject:self.imageFileName forKey:@"PROFILE_IMG"];
        [infoDic setObject:self.statusMsg forKey:@"PROFILE_MSG"];
        [infoDic setObject:self.bgImageFileName forKey:@"PROFILE_BACKGROUND_IMG"];
        
        vc.infoDic = infoDic;
        vc.fromSegue = @"PROFILE_TO_MY_MODAL";
        
        [self presentViewController:destination animated:YES completion:nil];
        //[self.navigationController pushViewController:destination animated:nil];
    }
}

@end
