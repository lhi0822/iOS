//
//  TeamListViewController.m
//  mfinity_sns
//
//  Created by hilee on 2017. 3. 8..
//  Copyright © 2017년 com.dbvalley. All rights reserved.
//

#import "TeamListViewController.h"
#import "HDNotificationView.h"
#import "TeamSelectController.h"
#import "PostDetailViewController.h"
#import "TaskDetailViewController.h"
#import "BoardCreateViewController.h"
#import "TaskWriteViewController.h"
#import "MFDBHelper.h"
#import "MFStyle.h"

#define REFRESH_HEADER_DEFAULT_HEIGHT               64.f
#define kSupplementaryViewID @"SUP_VIEW_ID"
#define MODEL_NAME [[UIDevice currentDevice] modelName]

@interface TeamListViewController (){
    int badgeCnt;
    MFDBHelper *dbHelper;
    
    NSString *cancelSNSNo;
    int notMemberCnt;
    
    UIImage *postCover;
    AppDelegate *appDelegate;
    
    SDImageCache *imgCache;
    
    BOOL isFirst;
}

@property (strong, nonatomic) VCFloatingActionButton *addButton;

@end

@implementation TeamListViewController

-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    [self.tabBarController.tabBar setHidden:NO];
    
    NSLog(@"TeamListViewController fromSegue : %@", self.fromSegue);
    NSLog(@"teamlist selectboard : %d", self.selectBoardKind);
    
    self.navigationController.navigationBar.translucent = NO;
    self.navigationController.navigationBar.barTintColor = [MFUtil myRGBfromHex:@"1D4696"];
    //self.navigationController.navigationBar.backgroundColor = [MFUtil myRGBfromHex:@"1D4696"];
    self.navigationController.navigationBar.tintColor = [UIColor whiteColor];
    
    self.navigationItem.titleView = [MFStyle navigationTitleStyle1:NSLocalizedString(@"게시판", @"게시판")];
    self.navigationItem.hidesBackButton = YES;
    
    dbHelper = [[MFDBHelper alloc]init];
    
    if (self.isEdit) {
        self.navigationItem.titleView = [MFStyle navigationTitleStyle1:NSLocalizedString(@"게시판 선택", @"게시판 선택")];
        
        self.searchField = [[UITextField alloc]initWithFrame:CGRectMake(50, 8, self.navigationController.navigationBar.frame.size.width-97, 30)];
        self.navigationItem.leftBarButtonItem =[[UIBarButtonItem alloc]initWithTitle:NSLocalizedString(@"msg24", @"")
                                                                               style:UIBarButtonItemStylePlain
                                                                              target:self
                                                                              action:@selector(leftSideMenuButtonPressed:)];
    }
    
    UIButton *right2 = [[UIButton alloc]initWithFrame:CGRectMake(0, 0, 40, 40)];
    [right2 setImage:[self getScaledImage:[UIImage imageNamed:@"btn_search.png"] scaledToMaxWidth:20] forState:UIControlStateNormal];
    [right2 addTarget:self action:@selector(rightSideMenuButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
    UIBarButtonItem *rightBtn2 = [[UIBarButtonItem alloc]initWithCustomView:right2];
    
    //NSArray *barButtonArr = [[NSArray alloc]initWithObjects:rightBtn1, rightBtn2, nil];
    self.navigationItem.rightBarButtonItem = rightBtn2;
    
    imgCache = [SDImageCache sharedImageCache];
    NSString *tmpPath = NSTemporaryDirectory();
    NSString *imgPath = [tmpPath stringByAppendingPathComponent:@"cache"];
    [imgCache makeDiskCachePath:imgPath];
    
    NSArray *subViews = [self.navigationController.navigationBar subviews];
    
    for (UIView *subview in subViews) {
        NSString *viewName = [NSString stringWithFormat:@"%@",[subview class]];
        if ([viewName isEqualToString:@"UITextField"]) {
            [subview removeFromSuperview];
        }
    }
    
    /*
     //플로팅 버튼
     //CGRect floatFrame = CGRectMake([UIScreen mainScreen].bounds.size.width - 44 - 20, [UIScreen mainScreen].bounds.size.height - 44 - 20 , 44, 44);
     CGRect floatFrame = CGRectMake([UIScreen mainScreen].bounds.size.width-64, [UIScreen mainScreen].bounds.size.height-self.tabBarController.tabBar.frame.size.height-70, 50, 50);
     self.addButton = [[VCFloatingActionButton alloc]initWithFrame:floatFrame normalImage:[UIImage imageNamed:@"floating_menu_home.png"] andPressedImage:[UIImage imageNamed:@"floating_menu_close.png"] withScrollview:self.tableView];
     
     self.addButton.backgroundColor = [MFUtil myRGBfromHex:@"1D4696"];
     self.addButton.layer.cornerRadius = self.addButton.frame.size.width/2;
     self.addButton.clipsToBounds = YES;
     self.addButton.contentMode = UIViewContentModeScaleAspectFit;
     
     //[self.addButton setImageEdgeInsets:UIEdgeInsetsMake(0.0, 0.0, 0.0, 0.0)];
     
     self.addButton.imageArray = @[@"floating_board.png",@"floating_write.png"];
     self.addButton.labelArray = @[@"게시판만들기",@"새글쓰기"];
     //self.addButton.imageArray = @[@"floating_board.png",@"floating_newproject.png"];
     //self.addButton.labelArray = @[@"게시판만들기",@"업무생성"];
     //self.addButton.imageArray = @[@"floating_board.png"];
     //self.addButton.labelArray = @[@"게시판만들기"];
     
     self.addButton.hideWhileScrolling = YES;
     self.addButton.delegate = self;
     
     [self.view addSubview:self.addButton];
     */
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(noti_NewPostPush:) name:@"noti_NewPostPush" object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(noti_NewTaskPush:) name:@"noti_NewTaskPush" object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(noti_NewChatPush:) name:@"noti_NewChatPush" object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(noti_ModifyBoard:) name:@"noti_ModifyBoard" object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(noti_ForceDeleteSNS:) name:@"noti_ForceDeleteSNS" object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(noti_RefreshTeamList:) name:@"noti_RefreshTeamList" object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(noti_DismissTeamList:) name:@"noti_DismissTeamList" object:nil];
    
    appDelegate = (AppDelegate *)[UIApplication sharedApplication].delegate;
    
    isFirst = YES;
    
    if(appDelegate.use_task){
        self.segContainer.hidden = NO;
        
        //[self.segContainer setFrame:CGRectMake(0, self.navigationController.navigationBar.frame.size.height + [UIApplication sharedApplication].statusBarFrame.size.height, self.view.frame.size.width, 60)];
        [self.segContainer setFrame:CGRectMake(0, 0, self.view.frame.size.width, 60)];
        self.boardSegment.tintColor = [MFUtil myRGBfromHex:@"1D4696"];
        
        self.boardSegment.selectedSegmentIndex=0;
        [self.boardSegment setFrame:CGRectMake(self.boardSegment.frame.origin.x, self.boardSegment.frame.origin.y, self.boardSegment.frame.size.width, 35)];
        [self.boardSegment addTarget:self action:@selector(segmentedChange:) forControlEvents:UIControlEventValueChanged];
        
        self.normalDataArray = [NSMutableArray array];
        self.projectDataArray = [NSMutableArray array];
        
        if(appDelegate.firstNormal){
            [self.boardSegment setTitle:@"일반 게시판" forSegmentAtIndex:0];
            [self.boardSegment setTitle:@"프로젝트 게시판" forSegmentAtIndex:1];
            
            //플로팅 버튼
            //CGRect floatFrame = CGRectMake([UIScreen mainScreen].bounds.size.width-64, [UIScreen mainScreen].bounds.size.height-self.tabBarController.tabBar.frame.size.height-70, 50, 50);
            CGRect floatFrame = CGRectMake([UIScreen mainScreen].bounds.size.width-64, self.tabBarController.tabBar.frame.origin.y-self.tabBarController.tabBar.frame.size.height-70, 50, 50);
        
            //self.addButton = [[VCFloatingActionButton alloc]initWithFrame:floatFrame normalImage:[UIImage imageNamed:@"floating_menu_home.png"] andPressedImage:[UIImage imageNamed:@"floating_menu_close.png"] withScrollview:self.tableView];
            self.addButton = [[VCFloatingActionButton alloc]initWithFrame:floatFrame normalImage:[UIImage imageNamed:@"floating_menu_home.png"] andPressedImage:[UIImage imageNamed:@"floating_menu_close.png"] withScrollview:self.tableView naviHeight:self.navigationController.navigationBar.frame.size.height isTranslucent:YES];
            self.addButton.backgroundColor = [MFUtil myRGBfromHex:@"1D4696"];
            self.addButton.layer.cornerRadius = self.addButton.frame.size.width/2;
            self.addButton.clipsToBounds = YES;
            self.addButton.contentMode = UIViewContentModeScaleAspectFit;
            self.addButton.tag = 100;
            
            //[self.addButton setImageEdgeInsets:UIEdgeInsetsMake(0.0, 0.0, 0.0, 0.0)];
            
            self.addButton.imageArray = @[@"floating_board.png",@"floating_write.png"];
            self.addButton.labelArray = @[@"게시판만들기",@"새글쓰기"];
            //self.addButton.imageArray = @[@"floating_board.png",@"floating_newproject.png"];
            //self.addButton.labelArray = @[@"게시판만들기",@"업무생성"];
            //self.addButton.imageArray = @[@"floating_board.png"];
            //self.addButton.labelArray = @[@"게시판만들기"];
            
            self.addButton.hideWhileScrolling = YES;
            self.addButton.delegate = self;
            
            self.addButton.translatesAutoresizingMaskIntoConstraints = NO;
            
            [self.view addSubview:self.addButton];
            
//            UIView *superView = self.view;
//            VCFloatingActionButton *floatBtn = self.addButton;
//            NSDictionary *views = NSDictionaryOfVariableBindings(floatBtn, superView);
//            NSString *vertical = [NSString stringWithFormat:@"V:[floatBtn(==50)]-(%f)-|", (self.tabBarController.tabBar.frame.size.height+10)];
//            NSString *horizontal = [NSString stringWithFormat:@"[floatBtn(==50)]-(10)-|"];
//            [self.view addConstraints:[NSLayoutConstraint constraintsWithVisualFormat:horizontal options:0 metrics:nil views:views]];
//            [self.view addConstraints:[NSLayoutConstraint constraintsWithVisualFormat:vertical options:0 metrics:nil views:views]];
            
            self.selectBoardKind=1;
            [self callWebService:@"getUserSNSLists" :1];
            
        } else {
            [self.boardSegment setTitle:@"일반 게시판" forSegmentAtIndex:1];
            [self.boardSegment setTitle:@"프로젝트 게시판" forSegmentAtIndex:0];
            
            //플로팅 버튼
            //CGRect floatFrame = CGRectMake([UIScreen mainScreen].bounds.size.width-64, [UIScreen mainScreen].bounds.size.height-self.tabBarController.tabBar.frame.size.height-70, 50, 50);
            CGRect floatFrame = CGRectMake([UIScreen mainScreen].bounds.size.width-64, self.tabBarController.tabBar.frame.origin.y-self.tabBarController.tabBar.frame.size.height-70, 50, 50);
            self.addButton = [[VCFloatingActionButton alloc]initWithFrame:floatFrame normalImage:[UIImage imageNamed:@"floating_menu_home.png"] andPressedImage:[UIImage imageNamed:@"floating_menu_close.png"] withScrollview:self.tableView naviHeight:self.navigationController.navigationBar.frame.size.height isTranslucent:YES];
            
            self.addButton.backgroundColor = [MFUtil myRGBfromHex:@"1D4696"];
            self.addButton.layer.cornerRadius = self.addButton.frame.size.width/2;
            self.addButton.clipsToBounds = YES;
            self.addButton.contentMode = UIViewContentModeScaleAspectFit;
            
            //[self.addButton setImageEdgeInsets:UIEdgeInsetsMake(0.0, 0.0, 0.0, 0.0)];
            
            //self.addButton.imageArray = @[@"floating_board.png",@"floating_write.png"];
            //self.addButton.labelArray = @[@"게시판만들기",@"새글쓰기"];
            self.addButton.imageArray = @[@"floating_board.png",@"floating_newproject.png"];
            self.addButton.labelArray = @[@"게시판만들기",@"업무생성"];
            //self.addButton.imageArray = @[@"floating_board.png"];
            //self.addButton.labelArray = @[@"게시판만들기"];
            
            self.addButton.hideWhileScrolling = YES;
            self.addButton.delegate = self;
            
            [self.view addSubview:self.addButton];
            
            self.selectBoardKind=2;
            [self callWebService:@"getUserSNSLists" :2];
        }
        
    } else {
        self.segContainer.hidden = YES;
        self.tableViewTopConstraint.constant = 0;
        
        [self.boardSegment setTitle:@"일반 게시판" forSegmentAtIndex:0];
        [self.boardSegment setTitle:@"프로젝트 게시판" forSegmentAtIndex:1];
        
        //플로팅 버튼
        //CGRect floatFrame = CGRectMake([UIScreen mainScreen].bounds.size.width-64, [UIScreen mainScreen].bounds.size.height-self.tabBarController.tabBar.frame.size.height-70, 50, 50);
        CGRect floatFrame = CGRectMake([UIScreen mainScreen].bounds.size.width-64, self.tabBarController.tabBar.frame.origin.y-self.tabBarController.tabBar.frame.size.height-70, 50, 50);
        self.addButton = [[VCFloatingActionButton alloc]initWithFrame:floatFrame normalImage:[UIImage imageNamed:@"floating_menu_home.png"] andPressedImage:[UIImage imageNamed:@"floating_menu_close.png"] withScrollview:self.tableView naviHeight:self.navigationController.navigationBar.frame.size.height isTranslucent:YES];
        
        self.addButton.backgroundColor = [MFUtil myRGBfromHex:@"1D4696"];
        self.addButton.layer.cornerRadius = self.addButton.frame.size.width/2;
        self.addButton.clipsToBounds = YES;
        self.addButton.contentMode = UIViewContentModeScaleAspectFit;
        
        //[self.addButton setImageEdgeInsets:UIEdgeInsetsMake(0.0, 0.0, 0.0, 0.0)];
        
        self.addButton.imageArray = @[@"floating_board.png",@"floating_write.png"];
        self.addButton.labelArray = @[@"게시판만들기",@"새글쓰기"];
        
        self.addButton.hideWhileScrolling = YES;
        self.addButton.delegate = self;
        
        [self.view addSubview:self.addButton];
        
        self.normalDataArray = [NSMutableArray array];
        self.selectBoardKind=1;
        [self callWebService:@"getUserSNSLists" :1];
    }
    
    if(self.pushPostDic.count>0){
        //        NSLog(@"self.pushPostDic : %@", self.pushPostDic);
        [[NSNotificationCenter defaultCenter] postNotificationName:@"noti_NewPostPush" object:nil userInfo:self.pushPostDic];
        self.pushPostDic=nil;
    }
    
    if(self.pushChatDic.count>0){
        //        NSLog(@"self.pushChatDic2 : %@", self.pushChatDic);
        [[NSNotificationCenter defaultCenter] postNotificationName:@"noti_NewChatPush" object:nil userInfo:self.pushChatDic];
        self.pushChatDic=nil;
    }
    
    appDelegate.currChatRoomNo = nil;
}

//-(void)deleteAlreadFloating{
//    NSArray *subViews = [self.view subviews];
//    for (UIView *subview in subViews) {
//        NSString *viewName = [NSString stringWithFormat:@"%@",[subview class]];
//        if ([viewName isEqualToString:@"VCFloatingActionButton"]) {
//            [subview removeFromSuperview];
//        }
//    }
//}

- (void)willAnimateRotationToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration{
    NSLog(@"self.navigation : %f", self.navigationController.navigationBar.frame.size.height);
    
    CGRect floatFrame = CGRectNull;
    
    if([UIDevice currentDevice].userInterfaceIdiom == UIUserInterfaceIdiomPad){
        floatFrame = CGRectMake([UIScreen mainScreen].bounds.size.width-64, self.tabBarController.tabBar.frame.origin.y-self.tabBarController.tabBar.frame.size.height-70, 50, 50);
        
    } else {
        if ((toInterfaceOrientation == UIInterfaceOrientationPortrait)||(toInterfaceOrientation == UIInterfaceOrientationPortraitUpsideDown)) {
            floatFrame = CGRectMake([UIScreen mainScreen].bounds.size.width-64, self.tabBarController.tabBar.frame.origin.y-self.tabBarController.tabBar.frame.size.height-70, 50, 50);
        } else {
            floatFrame = CGRectMake([UIScreen mainScreen].bounds.size.width-64, self.tabBarController.tabBar.frame.origin.y-self.tabBarController.tabBar.frame.size.height-40, 50, 50);
        }
    }
    
    
    //CGRect floatFrame = CGRectMake([UIScreen mainScreen].bounds.size.width-64, self.tabBarController.tabBar.frame.origin.y-self.tabBarController.tabBar.frame.size.height-70, 50, 50);
    //self.addButton = [[VCFloatingActionButton alloc]initWithFrame:floatFrame normalImage:[UIImage imageNamed:@"floating_menu_home.png"] andPressedImage:[UIImage imageNamed:@"floating_menu_close.png"] withScrollview:self.tableView isTranslucent:YES];
    
    self.addButton = [[VCFloatingActionButton alloc]initWithFrame:floatFrame normalImage:[UIImage imageNamed:@"floating_menu_home.png"] andPressedImage:[UIImage imageNamed:@"floating_menu_close.png"] withScrollview:self.tableView naviHeight:self.navigationController.navigationBar.frame.size.height isTranslucent:YES];
    self.addButton.backgroundColor = [MFUtil myRGBfromHex:@"1D4696"];
    self.addButton.layer.cornerRadius = self.addButton.frame.size.width/2;
    self.addButton.clipsToBounds = YES;
    self.addButton.contentMode = UIViewContentModeScaleAspectFit;
    
    if(self.selectBoardKind==1){
        self.addButton.imageArray = @[@"floating_board.png",@"floating_write.png"];
        self.addButton.labelArray = @[@"게시판만들기",@"새글쓰기"];
        
    } else if(self.selectBoardKind==2){
        self.addButton.imageArray = @[@"floating_board.png",@"floating_newproject.png"];
        self.addButton.labelArray = @[@"게시판만들기",@"업무생성"];
    }
    
    self.addButton.hideWhileScrolling = YES;
    self.addButton.delegate = self;
    
    [self.view addSubview:self.addButton];
    
    
}

-(void)createBoard{
    //[self performSegueWithIdentifier:@"BOARD_CREATE_MODAL" sender:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(noti_SaveBoard:) name:@"noti_SaveBoard" object:nil];
    
    UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
    BoardCreateViewController *destination = (BoardCreateViewController *)[storyboard instantiateViewControllerWithIdentifier:@"BoardCreateViewController"];
    UINavigationController *navController = [[UINavigationController alloc] initWithRootViewController:destination];
    
    navController.modalTransitionStyle = UIModalPresentationNone;
    [self presentViewController:navController animated:YES completion:nil];
    
    //TASK_CREATE_MODAL
    //    UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
    //    TaskWriteViewController *destination = (TaskWriteViewController *)[storyboard instantiateViewControllerWithIdentifier:@"TaskWriteViewController"];
    //    UINavigationController *navController = [[UINavigationController alloc] initWithRootViewController:destination];
    //
    //    navController.modalTransitionStyle = UIModalPresentationNone;
    //    [self presentViewController:navController animated:YES completion:nil];
}

-(void)segmentedChange: (UISegmentedControl *)sender{
    //NSLog(@"subview : %@", self.view.subviews);
    if(sender.selectedSegmentIndex == 0) {
        NSLog(@"일반");
        
        //플로팅 버튼 변경
        self.addButton.imageArray = @[@"floating_board.png",@"floating_write.png"];
        self.addButton.labelArray = @[@"게시판만들기",@"새글쓰기"];
        self.addButton.hideWhileScrolling = YES;
        self.addButton.delegate = self;
        
        if(appDelegate.firstNormal) {
            self.selectBoardKind = 1;
            
            if(isFirst) {
                [SVProgressHUD show];
                [self callWebService:@"getUserSNSLists" :1];
                isFirst = NO;
            }
            
        }
        else self.selectBoardKind = 2;
        [self.tableView reloadData];
        
    } else if(sender.selectedSegmentIndex == 1) {
        NSLog(@"프로젝트");
        
        //플로팅 버튼 변경
        self.addButton.imageArray = @[@"floating_board.png",@"floating_newproject.png"];
        self.addButton.labelArray = @[@"게시판만들기",@"업무생성"];
        self.addButton.hideWhileScrolling = YES;
        self.addButton.delegate = self;
        
        if(appDelegate.firstNormal) {
            self.selectBoardKind = 2;
            
            if(isFirst) {
                [SVProgressHUD show];
                [self callWebService:@"getUserSNSLists" :2];
                isFirst = NO;
            }
        }
        else self.selectBoardKind = 1;
        [self.tableView reloadData];
    }
}

- (void)rightSideMenuButtonPressed:(id)sender {
    if([self.fromSegue isEqualToString:@"POST_SELECT_GROUP_MODAL"]){
        //[self performSegueWithIdentifier:@"POST_BOARD_SEARCH_MODAL" sender:nil];
        
        UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
        SearchViewController *destination = (SearchViewController *)[storyboard instantiateViewControllerWithIdentifier:@"SearchViewController"];
        UINavigationController *navController = [[UINavigationController alloc] initWithRootViewController:destination];
        
        destination.fromSegue = @"POST_BOARD_SEARCH_MODAL";
        
        navController.modalTransitionStyle = UIModalPresentationNone;
        [self presentViewController:navController animated:YES completion:nil];
        
    } else {
        //[self performSegueWithIdentifier:@"BOARD_SEARCH_MODAL" sender:nil];
        UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
        SearchViewController *destination = (SearchViewController *)[storyboard instantiateViewControllerWithIdentifier:@"SearchViewController"];
        UINavigationController *navController = [[UINavigationController alloc] initWithRootViewController:destination];
        
        destination.fromSegue = @"BOARD_SEARCH_MODAL";
        
        navController.modalTransitionStyle = UIModalPresentationNone;
        [self presentViewController:navController animated:YES completion:nil];
    }
}

- (void)leftSideMenuButtonPressed:(id)sender {
    NSLog(@"%s",__FUNCTION__);
    [self dismissViewControllerAnimated:YES completion:nil];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


#pragma mark - Floating Button Event
-(void)didSelectMenuOptionAtIndex:(NSInteger)row{
    NSLog(@"%s, row : %ld", __func__, (long)row);
    if(row==0){
        [self createBoard];
        
    } else if(row==1){
        UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
        TeamListViewController *destination = (TeamListViewController *)[storyboard instantiateViewControllerWithIdentifier:@"TeamListViewController"];
        UINavigationController *navController = [[UINavigationController alloc] initWithRootViewController:destination];
        
        destination.fromSegue = @"POST_SELECT_GROUP_MODAL";
        destination.isEdit = YES;
        
        navController.modalTransitionStyle = UIModalPresentationNone;
        [self presentViewController:navController animated:YES completion:nil];
    }
}

#pragma mark - Push Notification
- (void)noti_NewPostPush:(NSNotification *)notification {
    @try{
        if(notification.userInfo!=nil){
            NSString *message = [notification.userInfo objectForKey:@"MESSAGE"];
            NSDictionary *dict = [NSDictionary dictionary];
            if(message!=nil){
                NSData *jsonData = [message dataUsingEncoding:NSUTF8StringEncoding];
                NSError *error;
                dict = [NSJSONSerialization JSONObjectWithData:jsonData options:kNilOptions error:&error];
            } else {
                dict = notification.userInfo;
            }
            
            UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
            PostDetailViewController *vc = (PostDetailViewController *)[storyboard instantiateViewControllerWithIdentifier:@"PostDetailViewController"];
            UINavigationController *nav = [[UINavigationController alloc] initWithRootViewController:vc];
            
            //NSLog(@"[UIViewController currentViewController] : %@", NSStringFromClass([[UIViewController currentViewController] class]));
            //NSLog(@"PostDetailViewController : %@", NSStringFromClass([vc class]));
            NSString *currentClass = NSStringFromClass([[UIViewController currentViewController] class]);
            NSString *postDetailClass = NSStringFromClass([vc class]);
            
            vc.fromSegue = @"NOTI_POST_DETAIL";
            vc.notiPostDic = dict;
            
            if([currentClass isEqualToString:postDetailClass]){
                //send notification to postdetail and if noti postno equal current postno, not open modal
                [[NSNotificationCenter defaultCenter] postNotificationName:@"noti_PostDetailView" object:nil userInfo:dict];
            } else {
                [self presentViewController:nav animated:YES completion:nil];
            }
        }
        
    } @catch (NSException *exception) {
        //[self sendToHilee:[NSString stringWithFormat:@"%s", __func__] :exception];
    }
}

-(void)noti_NewTaskPush:(NSNotification *)notification {
    @try{
        if(notification.userInfo!=nil){
            NSString *message = [notification.userInfo objectForKey:@"MESSAGE"];
            NSDictionary *dict = [NSDictionary dictionary];
            if(message!=nil){
                NSData *jsonData = [message dataUsingEncoding:NSUTF8StringEncoding];
                NSError *error;
                dict = [NSJSONSerialization JSONObjectWithData:jsonData options:kNilOptions error:&error];
            } else {
                dict = notification.userInfo;
            }
            
            UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
            TaskDetailViewController *vc = (TaskDetailViewController *)[storyboard instantiateViewControllerWithIdentifier:@"TaskDetailViewController"];
            UINavigationController *nav = [[UINavigationController alloc] initWithRootViewController:vc];
            
            NSString *currentClass = NSStringFromClass([[UIViewController currentViewController] class]);
            NSString *taskDetailClass = NSStringFromClass([vc class]);
            
            vc.fromSegue = @"NOTI_TASK_DETAIL";
            vc.notiTaskDic = dict;
            
            if([currentClass isEqualToString:taskDetailClass]){
                [[NSNotificationCenter defaultCenter] postNotificationName:@"noti_TaskDetailView" object:nil userInfo:dict];
            } else {
                [self presentViewController:nav animated:YES completion:nil];
            }
        }
        
    } @catch (NSException *exception) {
        //[self sendToHilee:[NSString stringWithFormat:@"%s", __func__] :exception];
    }
}

- (void)noti_NewChatPush:(NSNotification *)notification {
    @try{
        //NSLog(@"%s", __func__);
        NSArray *documentPaths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
        NSString *documentsDir = [documentPaths objectAtIndex:0];
        NSString *DBName = [AppDelegate getDBName];
        NSString *DBPath = [documentsDir stringByAppendingPathComponent:DBName];
        
        if(notification.userInfo!=nil){
            NSString *message = [notification.userInfo objectForKey:@"MESSAGE"];
            NSString *noti = [notification.userInfo objectForKey:@"NOTI"];
            NSDictionary *dict = [NSDictionary dictionary];
            if(noti==nil){
                NSData *jsonData = [message dataUsingEncoding:NSUTF8StringEncoding];
                NSError *error;
                dict = [NSJSONSerialization JSONObjectWithData:jsonData options:kNilOptions error:&error];
            } else {
                dict = notification.userInfo;
            }
            
            NSArray *dataSet = [dict objectForKey:@"DATASET"];
            NSString *roomNo = [[dataSet objectAtIndex:0] objectForKey:@"ROOM_NO"];
            //NSLog(@"dataSet : %@", dataSet);
            
            NSMutableArray *roomChatArr = [NSMutableArray array];
            NSString *sqlString = [NSString stringWithFormat:@"SELECT ROOM_NM, ROOM_NOTI FROM CHAT_ROOMS WHERE ROOM_NO = %@", roomNo];
            sqlite3 *database;
            if (sqlite3_open([DBPath UTF8String], &database) == SQLITE_OK) {
                NSString *sql = sqlString;
                const char *sqlStatement = [sql UTF8String];
                sqlite3_stmt *compiledStatement;
                
                if (sqlite3_prepare_v2(database, sqlStatement, -1, &compiledStatement, NULL) == SQLITE_OK) {
                    int rowCount = 0;
                    
                    while(sqlite3_step(compiledStatement) == SQLITE_ROW) {
                        rowCount = sqlite3_column_int(compiledStatement, 0);
                        
                        NSMutableDictionary *dic = [[NSMutableDictionary alloc]init];
                        
                        for(int j=0; j<sqlite3_column_count(compiledStatement);j++){
                            NSString *keyString = [NSString stringWithUTF8String:(sqlite3_column_name(compiledStatement, j))];
                            NSString *valueString = nil;
                            if (sqlite3_column_text(compiledStatement, j)==NULL) {
                                valueString = @"null";
                            }else{
                                valueString = [NSString stringWithUTF8String:(char *)sqlite3_column_text(compiledStatement, j)];
                            }
                            [dic setObject:valueString forKey:keyString];
                        }
                        [roomChatArr addObject:dic];
                    }
                }else {
                    NSLog(@"not SQLITE_OK");
                    printf("could not prepare statement: %s\n", sqlite3_errmsg(database));
                }
                sqlite3_finalize(compiledStatement);
                
            }else{
                NSLog(@"db not open");
            }
            sqlite3_close(database);
            
            //NSLog(@"roomChatArr : %@", roomChatArr);
            UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
            ChatViewController *vc = (ChatViewController *)[storyboard instantiateViewControllerWithIdentifier:@"ChatViewController"];
            
            RightSideViewController *rightViewController = [self.storyboard instantiateViewControllerWithIdentifier:@"RightSideViewController"];
            CGRect screen = [[UIScreen mainScreen]bounds];
            CGFloat screenWidth = screen.size.width;
            CGFloat screenHeight = screen.size.height;
            rightViewController.view.frame = CGRectMake(rightViewController.view.frame.origin.x, rightViewController.view.frame.origin.y, screenWidth, screenHeight);
            
            if(roomChatArr.count>0){
                NSString *roomNoti = [[roomChatArr objectAtIndex:0]objectForKey:@"ROOM_NOTI"];
                NSString *roomName = [NSString urlDecodeString:[[roomChatArr objectAtIndex:0]objectForKey:@"ROOM_NM"]];
                vc.roomNo = roomNo;
                vc.roomNoti = roomNoti;
                vc.roomName = roomName;
                rightViewController.roomNo = roomNo;
                rightViewController.roomNoti = roomNoti;
            }
            
            LGSideMenuController *container = [LGSideMenuController sideMenuControllerWithRootViewController:vc leftViewController:nil rightViewController:rightViewController];
            [container setNavigationItemTitle:[NSString urlDecodeString:vc.roomName]];
            
            //UIBarButtonItem *left = [[UIBarButtonItem alloc]initWithTitle:@"" style:UIBarButtonItemStylePlain target:self action:nil];
            //self.navigationItem.backBarButtonItem = left;
            self.navigationController.navigationBar.topItem.title = @"";
            
            NSString *sqlString2 = [NSString stringWithFormat:@"UPDATE CHAT_ROOMS SET NEW_CHAT = 0 WHERE ROOM_NO=%@;", roomNo];
            [self crudStatement:DBPath :sqlString2];
            
            NSString *currentClass = NSStringFromClass([[UIViewController currentViewController] class]);
            NSString *chatDetailClass = NSStringFromClass([vc class]);
            
            vc.fromSegue = @"NOTI_CHAT_DETAIL";
            vc.notiChatDic = dict;
            NSLog(@"TeamListViewController currentClass : %@, chatDetailClass : %@", currentClass, chatDetailClass);
            
            NSUserDefaults *classPref = [NSUserDefaults standardUserDefaults];
            [classPref setObject:currentClass forKey:@"CURR_CLASS"];
            [classPref synchronize];
            
            if([currentClass isEqualToString:chatDetailClass]){
                //send notification to postdetail and if noti postno equal current postno, not open modal
                [[NSNotificationCenter defaultCenter] postNotificationName:@"noti_ChatDetailView" object:nil userInfo:dict];
            } else {
                NSString *strClass = NSStringFromClass([self class]);
                if([currentClass isEqualToString:strClass]){
                    CATransition* transition = [CATransition animation];
                    transition.duration = 0.3f;
                    transition.type = kCATransitionMoveIn;
                    transition.subtype = kCATransitionFromTop;
                    [self.navigationController.view.layer addAnimation:transition forKey:kCATransition];
                    [self.navigationController pushViewController:container animated:NO];
                }
            }
        }
        
    } @catch (NSException *exception) {
        //[self sendToHilee:[NSString stringWithFormat:@"%s", __func__] :exception];
    }
}

- (void)noti_ModifyBoard:(NSNotification *)notification{
    [self callWebService:@"getUserSNSLists" :1];
    //[[NSNotificationCenter defaultCenter] removeObserver:self name:@"noti_ModifyBoard" object:nil];
}

- (void)noti_ForceDeleteSNS:(NSNotification *)notification{
    [self callWebService:@"getUserSNSLists" :1];
}

- (void)noti_RefreshTeamList:(NSNotification *)notification{
    [self callWebService:@"getUserSNSLists" :1];
}

- (void)noti_SavePost:(NSNotification *)notification{
    if([self.fromSegue isEqualToString:@"POST_SELECT_GROUP_MODAL"]){
        [self dismissViewControllerAnimated:YES completion:nil];
    }
}

- (void)noti_SaveTask:(NSNotification *)notification{
    if([self.fromSegue isEqualToString:@"POST_SELECT_GROUP_MODAL"]){
        [self dismissViewControllerAnimated:YES completion:nil];
    }
}

- (void)noti_SaveBoard:(NSNotification *)notification{
    NSLog(@"notification : %@", notification.userInfo);
    self.selectBoardKind = [[notification.userInfo objectForKey:@"SNS_KIND"] intValue];
    [self startLoading];
    //[[NSNotificationCenter defaultCenter] removeObserver:self name:@"noti_SaveBoard" object:nil];
}

- (void)noti_DismissTeamList:(NSNotification *)notification{
    NSLog(@"noti_DismissTeamList selectBoardKind : %d", self.selectBoardKind);
    [self callWebService:@"getUserSNSLists" :self.selectBoardKind];
    
}

-(void) crudStatement:(NSString *)dbPath :(NSString *)crudStmt{
    NSLog(@"%s", __func__);
    sqlite3 *database;
    NSLog(@"TeamListViewController crudStmt : %@", crudStmt);
    if (sqlite3_open([dbPath UTF8String], &database) == SQLITE_OK) {
        const char *sqlStatement = [crudStmt UTF8String];
        
        sqlite3_stmt *compiledStatement;
        if (sqlite3_prepare_v2(database, sqlStatement, -1, &compiledStatement, NULL) == SQLITE_OK) {
            
            if(sqlite3_step(compiledStatement) != SQLITE_DONE){
                NSLog(@"Error updating table: %s", sqlite3_errmsg(database));
                
            }else{
                NSLog(@"TeamListViewController ok");
            }
            
            if(sqlite3_finalize(compiledStatement) != SQLITE_OK){
                NSLog(@"SQL Error : %s",sqlite3_errmsg(database));
            }
        }else {
            NSLog(@"not SQLITE_OK");
            printf("could not prepare statement: %s\n", sqlite3_errmsg(database));
        }
    }else{
        
    }
    sqlite3_close(database);
}

#pragma mark - UITableViewDelegate UITableViewDataSource
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    if(self.selectBoardKind==1){
        if([self.fromSegue isEqualToString:@"POST_SELECT_GROUP_MODAL"]){
            return self.normalDataArray.count-notMemberCnt;
        } else {
            return self.normalDataArray.count;
        }
        
    } else if(self.selectBoardKind==2){
        return self.projectDataArray.count;
    }
    
    return 0;
}
-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    if(self.selectBoardKind==1){
        return 80;
        
    } else if(self.selectBoardKind==2){
        return 80;
    }
    return 0;
}
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    if(self.selectBoardKind==1){
        MFGroupCell *cell = (MFGroupCell *)[tableView dequeueReusableCellWithIdentifier:@"MFGroupCell"];
        
        if (cell == nil) {
            //cell = [[MFPostNameCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"MFPostNameCell"];
            
            NSArray *topLevelObject = [[NSBundle mainBundle] loadNibNamed:@"MFGroupCell" owner:self options:nil];
            
            for (id currentObject in topLevelObject) {
                if ([currentObject isKindOfClass:[MFGroupCell class]]) {
                    cell = (MFGroupCell *) currentObject;
                    [cell setSelectionStyle:UITableViewCellSelectionStyleNone];
                }
            }
        }
        
        NSDictionary *sns = [self.normalDataArray objectAtIndex:indexPath.row];
        NSString *snsStatus = [sns objectForKey:@"ITEM_TYPE"];
        
        if([self.fromSegue isEqualToString:@"POST_SELECT_GROUP_MODAL"]&&[snsStatus isEqualToString:@"MEMBER"]){
            [self setUpCell:cell atIndexPath:indexPath];
        } else {
            [self setUpCell:cell atIndexPath:indexPath];
        }
        
        cell.gestureRecognizers = nil;
        UILongPressGestureRecognizer *longPress = [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(boardLongClick:)];
        longPress.minimumPressDuration = 0.5;
        longPress.delegate = self;
        [cell addGestureRecognizer:longPress];
        
        return cell;
        
    } else if(self.selectBoardKind==2){
        MFGroupCell *cell = (MFGroupCell *)[tableView dequeueReusableCellWithIdentifier:@"MFGroupCell"];
        
        if (cell == nil) {
            NSArray *topLevelObject = [[NSBundle mainBundle] loadNibNamed:@"MFGroupCell" owner:self options:nil];
            
            for (id currentObject in topLevelObject) {
                if ([currentObject isKindOfClass:[MFGroupCell class]]) {
                    cell = (MFGroupCell *) currentObject;
                    [cell setSelectionStyle:UITableViewCellSelectionStyleNone];
                }
            }
        }
        [self setUpProjectCell:cell atIndexPath:indexPath];
        
        return cell;
    }
    
    return nil;
}

- (void)setUpCell:(MFGroupCell *)cell atIndexPath:(NSIndexPath *)indexPath {
    @try{
        cell.label3.hidden = YES;
        cell.requestBtn.hidden = YES;
        
        [cell.inviteBtn setFrame:CGRectMake(cell.inviteBtn.frame.origin.x, cell.inviteBtn.frame.origin.y, cell.inviteBtn.frame.size.width, cell.inviteBtn.frame.size.height)];
        [cell.requestBtn setFrame:CGRectMake(cell.requestBtn.frame.origin.x, cell.requestBtn.frame.origin.y, cell.requestBtn.frame.size.width, cell.requestBtn.frame.size.height)];
        
        NSDictionary *sns = [self.normalDataArray objectAtIndex:indexPath.row];
        NSString *coverImg = [NSString urlDecodeString:[sns objectForKey:@"COVER_IMG"]];
        NSString *snsName = [NSString urlDecodeString:[sns objectForKey:@"SNS_NM"]];
        NSString *snsDesc = [NSString urlDecodeString:[sns objectForKey:@"SNS_DESC"]];
        NSString *createUser = [NSString urlDecodeString:[sns objectForKey:@"CREATE_USER_NM"]];
        NSString *userCnt = [sns objectForKey:@"USER_COUNT"];
        NSString *waitingCnt = [sns objectForKey:@"WAITING_USER_COUNT"];
        NSString *snsStatus = [sns objectForKey:@"ITEM_TYPE"];
        
        if([snsDesc isEqualToString:@""]){
            cell.nameTopConstraint.constant = 12;
            cell.descHeightConstraint.constant = 0;
        } else {
            cell.nameTopConstraint.constant = 4;
            cell.descHeightConstraint.constant = 18;
        }
        
        postCover = nil;
        if(![coverImg isEqualToString:@""]&&![coverImg isEqualToString:@"null"]&&coverImg!=nil){
            //캐싱된 이미지 가져오기
            //            [imgCache queryDiskCacheForKey:coverImg done:^(UIImage *image, SDImageCacheType cacheType) {
            //                if(image!=nil){
            //                    postCover = image;
            //                } else {
            //                    UIImage *postCover = [self imageByScalingAndCroppingForSize:CGSizeMake(90, 90) :[UIImage imageNamed:@"board_blue_square.png"]];
            //                    cell.snsImageView.image = postCover;
            //                }
            //            }];
            
            [cell.snsImageView sd_setImageWithURL:[NSURL URLWithString:coverImg] placeholderImage:nil options:SDWebImageRefreshCached];
            
            //cell.snsImageView.image = postCover;
            
        } else {
            UIImage *postCover = [self imageByScalingAndCroppingForSize:CGSizeMake(90, 90) :[UIImage imageNamed:@"board_blue_square.png"]];
            cell.snsImageView.image = postCover;
        }
        
        cell.snsName.text = snsName;
        cell.snsDesc.text = snsDesc;
        
        [cell.leaderBtn setBackgroundColor:[UIColor clearColor]];
        [cell.leaderBtn setImage:[self getScaledImage:[UIImage imageNamed:@"icon_crown.png"] scaledToMaxWidth:11.0f] forState:UIControlStateNormal];
        [cell.leaderBtn setImageEdgeInsets:UIEdgeInsetsMake(0.0, 0.0, 0.0, 0.0)];
        [cell.leaderBtn setTitleEdgeInsets:UIEdgeInsetsMake(0.0, 3.0, 0.0, 0.0)];
        [cell.leaderBtn setTitle:createUser forState:UIControlStateNormal];
        if([createUser isEqualToString:@"관리자"]){
            [cell.leaderBtn setTitleColor:[UIColor redColor] forState:UIControlStateNormal];
        } else {
            [cell.leaderBtn setTitleColor:[UIColor lightGrayColor] forState:UIControlStateNormal];
        }
        
        [cell.memberBtn setBackgroundColor:[UIColor clearColor]];
        [cell.memberBtn setImage:[self getScaledImage:[UIImage imageNamed:@"icon_member.png"] scaledToMaxWidth:13.0f] forState:UIControlStateNormal];
        [cell.memberBtn setImageEdgeInsets:UIEdgeInsetsMake(0.0, 0.0, 0.0, 0.0)];
        [cell.memberBtn setTitleEdgeInsets:UIEdgeInsetsMake(0.0, 3.0, 0.0, 0.0)];
        [cell.memberBtn setTitle:[NSString stringWithFormat:@"멤버 %@", userCnt] forState:UIControlStateNormal];
        
        if([waitingCnt intValue]>0){
            cell.label2.hidden = NO;
            cell.inviteBtn.hidden = NO;
            [cell.inviteBtn setBackgroundColor:[UIColor clearColor]];
            [cell.inviteBtn setImage:[self getScaledImage:[UIImage imageNamed:@"icon_mail.png"] scaledToMaxWidth:13.0f] forState:UIControlStateNormal];
            [cell.inviteBtn setImageEdgeInsets:UIEdgeInsetsMake(0.0, 0.0, 0.0, 0.0)];
            [cell.inviteBtn setTitleEdgeInsets:UIEdgeInsetsMake(0.0, 3.0, 0.0, 0.0)];
            [cell.inviteBtn setTitle:[NSString stringWithFormat:@"     신청 %@", waitingCnt] forState:UIControlStateNormal];
            
        } else {
            cell.label2.hidden = YES;
            cell.inviteBtn.hidden = YES;
        }
        
        cell.statusBtn.image = nil;
        cell.statusBtn.contentMode = UIViewContentModeScaleAspectFit;
        if([snsStatus isEqualToString:@"MEMBER"]){
            cell.statusBtn.hidden = NO;
        } else if([snsStatus isEqualToString:@"JOIN_STANDBY"]){
            [cell.statusBtn setImage:[UIImage imageNamed:@"icon_standby.png"]];
            cell.statusBtn.hidden = NO;
        } else if([snsStatus isEqualToString:@"NOMEMBER"]){
            [cell.statusBtn setImage:[UIImage imageNamed:@"icon_nonmember.png"]];
            cell.statusBtn.hidden = NO;
        } else {
            
        }
        
    } @catch (NSException *exception) {
        //[self sendToHilee:[NSString stringWithFormat:@"%s", __func__] :exception];
    }
}

- (void)setUpProjectCell:(MFGroupCell *)cell atIndexPath:(NSIndexPath *)indexPath {
    @try{
        [cell.inviteBtn setFrame:CGRectMake(cell.inviteBtn.frame.origin.x, cell.inviteBtn.frame.origin.y, cell.inviteBtn.frame.size.width, cell.inviteBtn.frame.size.height)];
        [cell.inviteBtn setBackgroundColor:[UIColor yellowColor]];
        
        [cell.requestBtn setFrame:CGRectMake(cell.requestBtn.frame.origin.x, cell.requestBtn.frame.origin.y, cell.requestBtn.frame.size.width, cell.requestBtn.frame.size.height)];

        
        NSDictionary *sns = [self.projectDataArray objectAtIndex:indexPath.row];
        //NSLog(@"project sns : %@", sns);
        NSString *coverImg = [NSString urlDecodeString:[sns objectForKey:@"COVER_IMG"]];
        NSString *snsName = [NSString urlDecodeString:[sns objectForKey:@"SNS_NM"]];
        NSString *snsDesc = [NSString urlDecodeString:[sns objectForKey:@"SNS_DESC"]];
        NSString *createUser = [NSString urlDecodeString:[sns objectForKey:@"CREATE_USER_NM"]];
        NSString *userCnt = [sns objectForKey:@"USER_COUNT"];
        NSString *snsStatus = [sns objectForKey:@"ITEM_TYPE"];
        //NSString *waitingCnt = [sns objectForKey:@"WAITING_USER_COUNT"];
        NSString *startTask = [sns objectForKey:@"START_TASK"];
        NSString *endTask = [sns objectForKey:@"END_TASK"];
        NSString *holdTask = [sns objectForKey:@"HOLD_TASK"];
        NSString *reqTask = [sns objectForKey:@"REQUEST_TASK"];
        NSString *totTaskCnt = [sns objectForKey:@"TOTAL_TASK_COUNT"];
        
        if([snsDesc isEqualToString:@""]){
            cell.nameTopConstraint.constant = 12;
            cell.descHeightConstraint.constant = 0;
        } else {
            cell.nameTopConstraint.constant = 4;
            cell.descHeightConstraint.constant = 18;
        }
        
        cell.label3.hidden = YES;
        cell.requestBtn.hidden = YES;
        
        postCover = nil;
        
        /*
         //이미지캐싱
         SDImageCache *imgCache = [SDImageCache sharedImageCache];
         NSString *tmpPath = NSTemporaryDirectory();
         NSString *imgPath = [tmpPath stringByAppendingPathComponent:@"cache"];
         [imgCache makeDiskCachePath:imgPath];
         
         if(![coverImg isEqualToString:@""]&&![coverImg isEqualToString:@"null"]&&coverImg!=nil){
         //UIImage *postCover = [self imageByScalingAndCroppingForSize:CGSizeMake(90, 90) :[dbHelper saveThumbImage:@"cover" :coverImg]];
         UIImage *image = [dbHelper saveThumbImage:@"cover" :coverImg];
         if(image!=nil){
         postCover = [self imageByScalingAndCroppingForSize:CGSizeMake(90, 90) :image];
         
         [imgCache storeImage:postCover forKey:coverImg toDisk:YES];
         
         //캐싱된 이미지 가져오기
         SDImageCache *imgCache = [SDImageCache sharedImageCache];
         [imgCache queryDiskCacheForKey:coverImg done:^(UIImage *image, SDImageCacheType cacheType) {
         postCover = image;
         }];
         
         cell.snsImageView.image = postCover;
         
         } else {
         UIImage *postCover = [self imageByScalingAndCroppingForSize:CGSizeMake(90, 90) :[UIImage imageNamed:@"board_blue_square.png"]];
         cell.snsImageView.image = postCover;
         }
         } else {
         UIImage *postCover = [self imageByScalingAndCroppingForSize:CGSizeMake(90, 90) :[UIImage imageNamed:@"board_blue_square.png"]];
         cell.snsImageView.image = postCover;
         }
         */
        
        
        if(![coverImg isEqualToString:@""]&&![coverImg isEqualToString:@"null"]&&coverImg!=nil){
            //캐싱된 이미지 가져오기
            //            [imgCache queryDiskCacheForKey:coverImg done:^(UIImage *image, SDImageCacheType cacheType) {
            //                if(image!=nil){
            //                    postCover = image;
            //                } else {
            //                    UIImage *postCover = [self imageByScalingAndCroppingForSize:CGSizeMake(90, 90) :[UIImage imageNamed:@"board_blue_square.png"]];
            //                    cell.snsImageView.image = postCover;
            //                }
            //            }];
            //            cell.snsImageView.image = postCover;
            [cell.snsImageView sd_setImageWithURL:[NSURL URLWithString:coverImg] placeholderImage:nil options:SDWebImageRefreshCached];
            
            
        } else {
            UIImage *postCover = [self imageByScalingAndCroppingForSize:CGSizeMake(90, 90) :[UIImage imageNamed:@"board_blue_square.png"]];
            cell.snsImageView.image = postCover;
        }
        
        cell.snsName.text = snsName;
        cell.snsDesc.text = snsDesc;
        
        [cell.leaderBtn setBackgroundColor:[UIColor clearColor]];
        [cell.leaderBtn setImage:[self getScaledImage:[UIImage imageNamed:@"icon_crown.png"] scaledToMaxWidth:11.0f] forState:UIControlStateNormal];
        [cell.leaderBtn setImageEdgeInsets:UIEdgeInsetsMake(0.0, 0.0, 0.0, 0.0)];
        [cell.leaderBtn setTitleEdgeInsets:UIEdgeInsetsMake(0.0, 3.0, 0.0, 0.0)];
        [cell.leaderBtn setTitle:createUser forState:UIControlStateNormal];
        if([createUser isEqualToString:@"관리자"]){
            [cell.leaderBtn setTitleColor:[UIColor redColor] forState:UIControlStateNormal];
        } else {
            [cell.leaderBtn setTitleColor:[UIColor lightGrayColor] forState:UIControlStateNormal];
        }
        
        [cell.memberBtn setBackgroundColor:[UIColor clearColor]];
        [cell.memberBtn setImage:[self getScaledImage:[UIImage imageNamed:@"icon_member.png"] scaledToMaxWidth:13.0f] forState:UIControlStateNormal];
        [cell.memberBtn setImageEdgeInsets:UIEdgeInsetsMake(0.0, 0.0, 0.0, 0.0)];
        [cell.memberBtn setTitleEdgeInsets:UIEdgeInsetsMake(0.0, 3.0, 0.0, 0.0)];
        [cell.memberBtn setTitle:[NSString stringWithFormat:@"멤버 %@", userCnt] forState:UIControlStateNormal];
        
        
        if([startTask intValue]>0){
            cell.label2.hidden = NO;
            cell.inviteBtn.hidden = NO;
            [cell.inviteBtn setBackgroundColor:[UIColor clearColor]];
            [cell.inviteBtn setImage:[self getScaledImage:[UIImage imageNamed:@"icon_pregress.png"] scaledToMaxWidth:13.0f] forState:UIControlStateNormal];
            [cell.inviteBtn setImageEdgeInsets:UIEdgeInsetsMake(0.0, 0.0, 0.0, 0.0)];
            [cell.inviteBtn setTitleEdgeInsets:UIEdgeInsetsMake(0.0, 3.0, 0.0, 0.0)];
            [cell.inviteBtn setTitle:[NSString stringWithFormat:@"     진행 %@", startTask] forState:UIControlStateNormal];
            cell.requestBtnLeftConstraint.constant = 55;
        } else {
            cell.label2.hidden = YES;
            cell.inviteBtn.hidden = YES;
            cell.requestBtnLeftConstraint.constant = -5;
        }
        
        if([reqTask intValue]>0){
            cell.label3.hidden = NO;
            cell.requestBtn.hidden = NO;
            [cell.requestBtn setBackgroundColor:[UIColor clearColor]];
            [cell.requestBtn setImage:[self getScaledImage:[UIImage imageNamed:@"icon_alarm_gray.png"] scaledToMaxWidth:13.0f] forState:UIControlStateNormal];
            [cell.requestBtn setImageEdgeInsets:UIEdgeInsetsMake(0.0, 0.0, 0.0, 0.0)];
            [cell.requestBtn setTitleEdgeInsets:UIEdgeInsetsMake(0.0, 3.0, 0.0, 0.0)];
            [cell.requestBtn setTitle:[NSString stringWithFormat:@"     요청 %@", reqTask] forState:UIControlStateNormal];
        } else {
            cell.label3.hidden = YES;
            cell.requestBtn.hidden = YES;
        }
        
        cell.statusBtn.image = nil;
        cell.statusBtn.contentMode = UIViewContentModeScaleAspectFit;
        if([snsStatus isEqualToString:@"MEMBER"]){
            cell.statusBtn.hidden = NO;
        } else if([snsStatus isEqualToString:@"JOIN_STANDBY"]){
            [cell.statusBtn setImage:[UIImage imageNamed:@"icon_standby.png"]];
            cell.statusBtn.hidden = NO;
        } else if([snsStatus isEqualToString:@"NOMEMBER"]){
            [cell.statusBtn setImage:[UIImage imageNamed:@"icon_nonmember.png"]];
            cell.statusBtn.hidden = NO;
        } else {
            
        }
        
    } @catch (NSException *exception) {
        //[self sendToHilee:[NSString stringWithFormat:@"%s", __func__] :exception];
    }
}


- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    //NSLog(@"sns : %@",[self.normalDataArray objectAtIndex:indexPath.row]);
    @try{
        NSString *snsNo;
        NSString *snsName;
        NSString *itemType;
        NSDictionary *snsInfoDic = [NSDictionary dictionary];
        
        if(self.selectBoardKind==1){
            snsNo = [[self.normalDataArray objectAtIndex:indexPath.row] objectForKey:@"SNS_NO"];
            snsName = [NSString urlDecodeString:[[self.normalDataArray objectAtIndex:indexPath.row] objectForKey:@"SNS_NM"]];
            itemType = [[self.normalDataArray objectAtIndex:indexPath.row] objectForKey:@"ITEM_TYPE"];
            snsInfoDic = [self.normalDataArray objectAtIndex:indexPath.row];
            
        } else if(self.selectBoardKind==2){
            snsNo = [[self.projectDataArray objectAtIndex:indexPath.row] objectForKey:@"SNS_NO"];
            snsName = [NSString urlDecodeString:[[self.projectDataArray objectAtIndex:indexPath.row] objectForKey:@"SNS_NM"]];
            itemType = [[self.projectDataArray objectAtIndex:indexPath.row] objectForKey:@"ITEM_TYPE"];
            snsInfoDic = [self.projectDataArray objectAtIndex:indexPath.row];
        }
        
        if (self.isEdit) {
            UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
            if(self.selectBoardKind==1){
                PostWriteTableViewController *vc = (PostWriteTableViewController *)[storyboard instantiateViewControllerWithIdentifier:@"PostWriteTableViewController"];
                UINavigationController *nav = [[UINavigationController alloc] initWithRootViewController:vc];
                
                vc.snsNo = snsNo;
                vc.snsName = snsName;
                vc.fromSegue = @"POST_WRITE_PUSH";
                
                [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(noti_SavePost:) name:@"noti_SavePost" object:nil];
                
                self.navigationController.navigationBar.topItem.title = @"";
                [self presentViewController:nav animated:YES completion:nil];
                
            } else if(self.selectBoardKind==2){
                TaskWriteViewController *vc = (TaskWriteViewController *)[storyboard instantiateViewControllerWithIdentifier:@"TaskWriteViewController"];
                UINavigationController *nav = [[UINavigationController alloc] initWithRootViewController:vc];
                
                vc.snsNo = snsNo;
                vc.snsName = snsName;
                vc.fromSegue = @"TASK_WRITE_PUSH";
                
                [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(noti_SaveTask:) name:@"noti_SaveTask" object:nil];
                
                self.navigationController.navigationBar.topItem.title = @"";
                [self presentViewController:nav animated:YES completion:nil];
            }
            
        } else {
            if([itemType isEqualToString:@"MEMBER"]){
                UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
                TeamSelectController *vc = (TeamSelectController *)[storyboard instantiateViewControllerWithIdentifier:@"TeamSelectController"];
                UINavigationController *nav = [[UINavigationController alloc] initWithRootViewController:vc];
                
                vc.snsNo = snsNo;
                vc.snsName = snsName;
                //vc.snsInfoDic = snsInfoDic;
                vc.fromSegue = @"BOARD_SELECT_TEAM";
                vc.selectBoardKind = self.selectBoardKind;
                self.navigationController.navigationBar.topItem.title = @"";
                
                [self presentViewController:nav animated:YES completion:nil];
                
            } else if([itemType isEqualToString:@"NOMEMBER"]){
                UIAlertController *alert = [UIAlertController alertControllerWithTitle:NSLocalizedString(@"join_sns_toast7", @"join_sns_toast7") message:nil preferredStyle:UIAlertControllerStyleAlert];
                UIAlertAction* okButton = [UIAlertAction actionWithTitle:@"확인" style:UIAlertActionStyleDefault
                                                                 handler:^(UIAlertAction * action) {
                                                                     [alert dismissViewControllerAnimated:YES completion:nil];
                                                                 }];
                
                [alert addAction:okButton];
                [self presentViewController:alert animated:YES completion:nil];
                
            } else if([itemType isEqualToString:@"JOIN_STANDBY"]){
                UIAlertController *alert = [UIAlertController alertControllerWithTitle:NSLocalizedString(@"join_sns_toast6", @"join_sns_toast6") message:nil preferredStyle:UIAlertControllerStyleAlert];
                UIAlertAction* okButton = [UIAlertAction actionWithTitle:@"확인" style:UIAlertActionStyleDefault
                                                                 handler:^(UIAlertAction * action) {
                                                                     [alert dismissViewControllerAnimated:YES completion:nil];
                                                                 }];
                
                [alert addAction:okButton];
                [self presentViewController:alert animated:YES completion:nil];
            }
        }
        
    } @catch (NSException *exception) {
        //[self sendToHilee:[NSString stringWithFormat:@"%s", __func__] :exception];
    }
}

-(void)boardLongClick:(UILongPressGestureRecognizer *)gesture{
    CGPoint p = [gesture locationInView:self.tableView];
    NSIndexPath *indexPath = [self.tableView indexPathForRowAtPoint:p];
    if (indexPath == nil) {
        //NSLog(@"long press on table view but not on a row");
    } else if (gesture.state == UIGestureRecognizerStateBegan) {
        NSString *itemType = [[self.normalDataArray objectAtIndex:indexPath.row] objectForKey:@"ITEM_TYPE"];
        if([itemType isEqualToString:@"JOIN_STANDBY"]){
            UIAlertController *alert = [UIAlertController alertControllerWithTitle:NSLocalizedString(@"join_sns_toast8", @"join_sns_toast8") message:nil preferredStyle:UIAlertControllerStyleAlert];
            UIAlertAction* okButton = [UIAlertAction actionWithTitle:NSLocalizedString(@"확인", @"확인") style:UIAlertActionStyleDefault
                                                             handler:^(UIAlertAction * action) {
                                                                 cancelSNSNo = [[self.normalDataArray objectAtIndex:indexPath.row] objectForKey:@"SNS_NO"];
                                                                 [alert dismissViewControllerAnimated:YES completion:nil];
                                                                 [self callWebService:@"withdrawSNS" :0];
                                                             }];
            UIAlertAction *cancelButton = [UIAlertAction actionWithTitle:NSLocalizedString(@"취소", @"취소")
                                                                   style:UIAlertActionStyleCancel
                                                                 handler:^(UIAlertAction * action){
                                                                     [alert dismissViewControllerAnimated:YES completion:nil];
                                                                 }];
            
            [alert addAction:okButton];
            [alert addAction:cancelButton];
            [self presentViewController:alert animated:YES completion:nil];
        }
    } else {
        //NSLog(@"gestureRecognizer.state = %ld", gesture.state);
    }
}

- (void)callWebService:(NSString *)serviceName :(int)snsKind{
    NSString *urlString = appDelegate.main_url;
    NSURL *url = [NSURL URLWithString:[urlString stringByAppendingPathComponent:serviceName]];
    NSString *paramString = nil;
    NSString *compNo = [[NSUserDefaults standardUserDefaults] objectForKey:@"COMP_NO"];
    
    if([serviceName isEqualToString:@"getUserSNSLists"]){
        paramString = [NSString stringWithFormat:@"compNo=%@&usrId=%@&snsKind=%d&searchNm=""",compNo, [[NSUserDefaults standardUserDefaults] objectForKey:@"USER_ID"], snsKind];
        
    } else if([serviceName isEqualToString:@"withdrawSNS"]){
        //isJoin("true":탈퇴 or "false":가입신청취소) 이 화면에서는 가입신청취소의 경우만.
        NSString *myUserNo = [[NSUserDefaults standardUserDefaults] objectForKey:@"CUSER_NO"];
        //NSString *mfpsId = [NSString stringWithFormat:@"USER.%@.%@", [[NSUserDefaults standardUserDefaults] objectForKey:@"USER_ID"], [MFUtil getUUID]];
        NSString *mfpsId = [NSString stringWithFormat:@"USER.%@.%@", [[NSUserDefaults standardUserDefaults] objectForKey:@"USER_ID"],  [[NSUserDefaults standardUserDefaults] objectForKey:@"DVC_ID"]];
        
        paramString = [NSString stringWithFormat:@"usrNo=%@&compNo=%@&snsNo=%@&mfpsId=%@&isJoin=false", myUserNo, compNo, cancelSNSNo, mfpsId];
        cancelSNSNo = nil;
    }
    
    MFURLSession *session = [[MFURLSession alloc]initWithURL:url option:paramString];
    session.delegate = self;
    [session start];
}

#pragma mark - MFURLSessionDelegate
- (void)returnDataWithObject:(MFURLSession *)session error:(NSString *)error{
    [SVProgressHUD dismiss];
    //NSLog(@"reteurnDataString : %@",session.returnDataString);
    NSLog(@"error : %@",error);
    if (error!=nil) {
        NSLog(@"error : %@",error);
    }else{
        NSString *result = [session.returnDictionary objectForKey:@"RESULT"];
        NSString *wsName = [[session.url absoluteString] lastPathComponent];
        //NSLog(@"wsName : %@", wsName);
        NSDictionary *dic = session.returnDictionary;
        
        if ([result isEqualToString:@"SUCCESS"]) {
            if ([wsName isEqualToString:@"getUserSNSLists"]) {
                if(self.selectBoardKind==1){
                    //NSLog(@"dic1 : %@", dic);
                    notMemberCnt=0;
                    
                    self.normalDataArray = [dic objectForKey:@"DATASET"];
                    NSLog(@"normalDataArray : %@", self.normalDataArray);
                    for(int i=0; i<self.normalDataArray.count; i++){
                        NSDictionary *dataSet = [self.normalDataArray objectAtIndex:i];
                        NSString *snsType = [dataSet objectForKey:@"SNS_TY"];
                        NSString *snsNo = [dataSet objectForKey:@"SNS_NO"];
                        NSString *snsName = [NSString urlDecodeString:[dataSet objectForKey:@"SNS_NM"]];
                        NSString *needAllow = [dataSet objectForKey:@"NEED_ALLOW"];
                        NSString *snsDesc = [NSString urlDecodeString:[dataSet objectForKey:@"SNS_DESC"]];
                        NSString *coverImg = [NSString urlDecodeString:[dataSet objectForKey:@"COVER_IMG"]];
                        NSNumber *createUser = [dataSet objectForKey:@"CREATE_USER_NO"];
                        NSString *createDate = [NSString urlDecodeString:[dataSet objectForKey:@"CREATE_DATE"]];
                        NSNumber *compNo = [dataSet objectForKey:@"COMP_NO"];
                        NSString *snsKind = [dataSet objectForKey:@"SNS_KIND"];
                        NSString *itemType = [dataSet objectForKey:@"ITEM_TYPE"];
                        
                        //이미지캐싱
                        //                        normalImgCache = [SDImageCache sharedImageCache];
                        //                        NSString *tmpPath = NSTemporaryDirectory();
                        //                        NSString *imgPath = [tmpPath stringByAppendingPathComponent:@"cache"];
                        //                        [normalImgCache makeDiskCachePath:imgPath];
                        
                        if(![coverImg isEqualToString:@""]&&![coverImg isEqualToString:@"null"]&&coverImg!=nil){
                            UIImage *image = [dbHelper saveThumbImage:@"cover" :coverImg];
                            if(image!=nil){
                                postCover = [self imageByScalingAndCroppingForSize:CGSizeMake(90, 90) :image];
                                [imgCache storeImage:postCover forKey:coverImg toDisk:YES];
                            }
                        }
                        
                        if([snsKind isEqualToString:@"Normal"]) snsKind = @"1";
                        else snsKind = @"2";
                        
                        if(![itemType isEqualToString:@"MEMBER"]){
                            notMemberCnt++;
                        }
                        
                        NSMutableArray *selectArr = [dbHelper selectQuery:[NSString stringWithFormat:@"SELECT SNS_NO FROM SNS WHERE SNS_NO=%@", snsNo]];
                        //NSLog(@"sns selectArr : %@", selectArr);
                        
                        if(selectArr.count>0){
                            //POST_NOTI INTEGER DEFAULT 1, COMMENT_NOTI
                            NSString *sqlString = [NSString stringWithFormat:@"UPDATE SNS SET SNS_NM = '%@', SNS_TY = %@, NEED_ALLOW = %@, SNS_DESC = '%@', COVER_IMG = '%@'", snsName, snsType, needAllow, snsDesc, coverImg];
                            [dbHelper crudStatement:sqlString];
                            
                        } else {
                            NSString *sqlString = [NSString stringWithFormat:@"INSERT INTO SNS(SNS_NO, SNS_NM, SNS_TY, NEED_ALLOW, SNS_DESC, COVER_IMG, CUSER_NO, CREATE_DATE, COMP_NO, SNS_KIND) VALUES(%@, '%@', '%@', '%@', '%@', '%@', %@, '%@', %@, '%@');", snsNo, snsName, snsType, needAllow, snsDesc, coverImg, createUser, createDate, compNo, snsKind];
                            [dbHelper crudStatement:sqlString];
                        }
                        
                        //                        NSString *sqlString = [NSString stringWithFormat:@"INSERT OR REPLACE INTO SNS(SNS_NO, SNS_NM, SNS_TY, NEED_ALLOW, SNS_DESC, COVER_IMG, CUSER_NO, CREATE_DATE, COMP_NO, SNS_KIND) VALUES(%@, '%@', '%@', '%@', '%@', '%@', %@, '%@', %@, '%@');", snsNo, snsName, snsType, needAllow, snsDesc, coverImg, createUser, createDate, compNo, snsKind];
                        //                        [dbHelper crudStatement:sqlString];
                    }
                    
                } else if(self.selectBoardKind==2){
                    //NSLog(@"dic2 : %@", dic);
                    notMemberCnt=0;
                    
                    self.projectDataArray = [dic objectForKey:@"DATASET"];
                    for(int i=0; i<self.projectDataArray.count; i++){
                        NSDictionary *dataSet = [self.projectDataArray objectAtIndex:i];
                        NSString *snsType = [dataSet objectForKey:@"SNS_TY"];
                        NSString *snsNo = [dataSet objectForKey:@"SNS_NO"];
                        NSString *snsName = [NSString urlDecodeString:[dataSet objectForKey:@"SNS_NM"]];
                        NSString *needAllow = [dataSet objectForKey:@"NEED_ALLOW"];
                        NSString *snsDesc = [NSString urlDecodeString:[dataSet objectForKey:@"SNS_DESC"]];
                        NSString *coverImg = [NSString urlDecodeString:[dataSet objectForKey:@"COVER_IMG"]];
                        NSNumber *createUser = [dataSet objectForKey:@"CREATE_USER_NO"];
                        NSString *createDate = [NSString urlDecodeString:[dataSet objectForKey:@"CREATE_DATE"]];
                        NSNumber *compNo = [dataSet objectForKey:@"COMP_NO"];
                        NSString *snsKind = [dataSet objectForKey:@"SNS_KIND"];
                        NSString *itemType = [dataSet objectForKey:@"ITEM_TYPE"];
                        
                        //이미지캐싱
                        if(![coverImg isEqualToString:@""]&&![coverImg isEqualToString:@"null"]&&coverImg!=nil){
                            UIImage *image = [dbHelper saveThumbImage:@"cover" :coverImg];
                            if(image!=nil){
                                postCover = [self imageByScalingAndCroppingForSize:CGSizeMake(90, 90) :image];
                                [imgCache storeImage:postCover forKey:coverImg toDisk:YES];
                            }
                        }
                        
                        if([snsKind isEqualToString:@"Normal"]) snsKind = @"1";
                        else snsKind = @"2";
                        
                        if(![itemType isEqualToString:@"MEMBER"]){
                            notMemberCnt++;
                        }
                        
                        NSString *sqlString = [NSString stringWithFormat:@"INSERT OR REPLACE INTO SNS(SNS_NO, SNS_NM, SNS_TY, NEED_ALLOW, SNS_DESC, COVER_IMG, CUSER_NO, CREATE_DATE, COMP_NO, SNS_KIND) VALUES(%@, '%@', '%@', '%@', '%@', '%@', %@, '%@', %@, '%@');", snsNo, snsName, snsType, needAllow, snsDesc, coverImg, createUser, createDate, compNo, snsKind];
                        [dbHelper crudStatement:sqlString];
                    }
                }
                
                //                if([AppDelegate isProject]){
                //                    if(self.boardSegment.selectedSegmentIndex==0){
                //                        [self segmentedChange:self.boardSegment];
                //                    }
                //                } else {
                [self.tableView reloadData];
                //                }
                
                
            } else if([wsName isEqualToString:@"withdrawSNS"]){
                [self callWebService:@"getUserSNSLists" :1];
                UIAlertController *alert = [UIAlertController alertControllerWithTitle:NSLocalizedString(@"가입신청이 취소되었습니다.", @"가입신청이 취소되었습니다.") message:nil preferredStyle:UIAlertControllerStyleAlert];
                UIAlertAction* okButton = [UIAlertAction actionWithTitle:NSLocalizedString(@"확인", @"확인") style:UIAlertActionStyleDefault
                                                                 handler:^(UIAlertAction * action) {
                                                                     [alert dismissViewControllerAnimated:YES completion:nil];
                                                                 }];
                [alert addAction:okButton];
                [self presentViewController:alert animated:YES completion:nil];
            }
        }
    }
}

-(void)returnError:(MFURLSession *)session error:(NSError *)error{
    NSLog(@"error : %@", error);
}

- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    NSIndexPath *indexPath = (NSIndexPath *)sender;
    if ([[segue identifier] isEqualToString:@"POST_WRITE_PUSH"]) {
        PostWriteTableViewController *destination = segue.destinationViewController;
        destination.snsNo = [[self.normalDataArray objectAtIndex:indexPath.row] objectForKey:@"SNS_NO"];
        destination.snsName = [NSString urlDecodeString:[[self.normalDataArray objectAtIndex:indexPath.row] objectForKey:@"SNS_NM"]];
        destination.fromSegue = segue.identifier;
        self.navigationController.navigationBar.topItem.title = @"";
        
    } else if ([[segue identifier] isEqualToString:@"BOARD_SEARCH_MODAL"]) {
        UINavigationController *nav = segue.destinationViewController;
        SearchViewController *destination = [nav.childViewControllers objectAtIndex:0];
        destination.fromSegue = segue.identifier;
        
    } else if ([[segue identifier] isEqualToString:@"POST_BOARD_SEARCH_MODAL"]) {
        UINavigationController *nav = segue.destinationViewController;
        SearchViewController *destination = [nav.childViewControllers objectAtIndex:0];
        destination.fromSegue = segue.identifier;
        
    } /*else if([[segue identifier] isEqualToString:@"BOARD_SELECT_TEAM"]){
       UINavigationController *nav = segue.destinationViewController;
       TeamSelectController *destination = [nav.childViewControllers objectAtIndex:0];
       //TeamSelectController *destination = segue.destinationViewController;
       destination.snsNo = [[self.normalDataArray objectAtIndex:indexPath.row] objectForKey:@"SNS_NO"];
       destination.snsName = [NSString urlDecodeString:[[self.normalDataArray objectAtIndex:indexPath.row] objectForKey:@"SNS_NM"]];
       destination.snsInfoDic = [self.normalDataArray objectAtIndex:indexPath.row];
       destination.fromSegue = segue.identifier;
       self.navigationController.navigationBar.topItem.title = @"";
       //self.navigationController.navigationBar.backgroundColor = [UIColor yellowColor];
       
       }*/ else if([[segue identifier] isEqualToString:@"BOARD_CREATE_MODAL"]){
           [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(noti_SaveBoard:) name:@"noti_SaveBoard" object:nil];
       }
}

- (UIImage *)getScaledImage:(UIImage *)image scaledToMaxWidth:(CGFloat)width {
    CGFloat oldWidth = image.size.width;
    CGFloat oldHeight = image.size.height;
    
    CGFloat scaleFactor=1;
    
    //if (oldWidth > width) {
    scaleFactor = width / oldWidth;
    //} else  //oldWidth<width and height==0이면, scale하지 않음.
    //    return image;
    
    CGFloat newHeight = oldHeight * scaleFactor;
    CGFloat newWidth = oldWidth * scaleFactor;
    CGSize newSize = CGSizeMake(newWidth, newHeight);
    
    //UIGraphicsBeginImageContext(newSize);
    UIGraphicsBeginImageContextWithOptions(newSize, NO, [UIScreen mainScreen].scale);
    [image drawInRect:CGRectMake(0, 0, newSize.width, newSize.height)];
    UIImage *newImage = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return newImage;
}

- (UIImage*)imageByScalingAndCroppingForSize:(CGSize)targetSize :(UIImage *)image {
    UIImage *sourceImage = image;
    UIImage *newImage = nil;
    CGSize imageSize = sourceImage.size;
    CGFloat width = imageSize.width;
    CGFloat height = imageSize.height;
    CGFloat targetWidth = targetSize.width;
    CGFloat targetHeight = targetSize.height;
    CGFloat scaleFactor = 0.0;
    CGFloat scaledWidth = targetWidth;
    CGFloat scaledHeight = targetHeight;
    CGPoint thumbnailPoint = CGPointMake(0.0,0.0);
    
    if (CGSizeEqualToSize(imageSize, targetSize) == NO)
    {
        CGFloat widthFactor = targetWidth / width;
        CGFloat heightFactor = targetHeight / height;
        
        if (widthFactor > heightFactor)
            scaleFactor = widthFactor; // scale to fit height
        else
            scaleFactor = heightFactor; // scale to fit width
        scaledWidth  = width * scaleFactor;
        scaledHeight = height * scaleFactor;
        
        // center the image
        if (widthFactor > heightFactor)
        {
            thumbnailPoint.y = (targetHeight - scaledHeight) * 0.5;
        }
        else
            if (widthFactor < heightFactor)
            {
                thumbnailPoint.x = (targetWidth - scaledWidth) * 0.5;
            }
    }
    
    //UIGraphicsBeginImageContext(targetSize); // this will crop
    UIGraphicsBeginImageContextWithOptions(targetSize, NO, [UIScreen mainScreen].scale);
    
    CGRect thumbnailRect = CGRectZero;
    thumbnailRect.origin = thumbnailPoint;
    thumbnailRect.size.width  = scaledWidth;
    thumbnailRect.size.height = scaledHeight;
    
    [sourceImage drawInRect:thumbnailRect];
    
    newImage = UIGraphicsGetImageFromCurrentImageContext();
    if(newImage == nil)
        NSLog(@"could not scale image");
    
    //pop the context to get back to the default
    UIGraphicsEndImageContext();
    return newImage;
}

#pragma mark - UIScrollView Delegate
- (void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate{
    @try {
        CGRect screen = [[UIScreen mainScreen]bounds];
        CGFloat screenWidth = screen.size.width;
        CGFloat screenHeight = screen.size.height;
        if ([MFUtil retinaDisplayCapable]) {
            screenHeight = screenHeight*2;
            screenWidth = screenWidth*2;
        }
        int height = 270;
        
        NSArray *tmp = [MODEL_NAME componentsSeparatedByString:@" "];
        if ([tmp[1] hasPrefix:@"5"]) {
            height = 370;
        }else if ([tmp[1] hasPrefix:@"6"] || [tmp[1] hasPrefix:@"7"] || [tmp[1] hasPrefix:@"8"] || [tmp[1] hasPrefix:@"X"]) {
            if (tmp.count==2) {
                height = 570;
            }else{
                height = 470;
            }
            
        }
        
        if (scrollView.contentSize.height-scrollView.contentOffset.y<470) {
            CGPoint offset = scrollView.contentOffset;
            CGRect bounds = scrollView.bounds;
            CGSize size = scrollView.contentSize;
            UIEdgeInsets inset = scrollView.contentInset;
            float y = offset.y + bounds.size.height - inset.bottom;
            float h = size.height;
            
            float reload_distance = 10;
            if(y > h + reload_distance) {
                //데이터로드
            }
        }
        [self scrollViewDidEndDragging2:scrollView willDecelerate:NO];
        
    } @catch (NSException *exception) {
        NSLog(@"exception : %@", exception);
    }
}
- (void)scrollViewDidEndDragging2:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate{
    if(scrollView.contentOffset.y <= -REFRESH_HEADER_DEFAULT_HEIGHT){
        [self startLoading];
    }
}
- (void)startLoading {
    @try {
        //데이터새로고침
        //        NSString *urlString = [AppDelegate getMainURL];
        //        NSURL *url = [NSURL URLWithString:[urlString stringByAppendingPathComponent:@"getUserSNSLists"]];
        //        NSString *paramString = [NSString stringWithFormat:@"usrId=%@&searchNm=""",[[NSUserDefaults standardUserDefaults] objectForKey:@"USER_ID"]];
        //        MFURLSession *session = [[MFURLSession alloc]initWithURL:url option:paramString];
        //        session.delegate = self;
        //        if ([session start]) {
        //            [SVProgressHUD show];
        //        }
        [SVProgressHUD show];
        if(self.selectBoardKind==1){
            [self callWebService:@"getUserSNSLists" :1];
        } else if(self.selectBoardKind==2){
            [self callWebService:@"getUserSNSLists" :2];
        }
        
    } @catch (NSException *exception) {
        //[self sendToHilee:[NSString stringWithFormat:@"%s", __func__] :exception];
    }
}
- (void)scrollViewDidScroll:(UIScrollView *)scrollView{
    //    CGFloat scrollOffsetY = scrollView.contentOffset.y;
    //
    //    if(scrollOffsetY > 0) {
    //        self.tableView.contentInset = UIEdgeInsetsZero;
    //    } else if(scrollOffsetY >= - REFRESH_HEADER_DEFAULT_HEIGHT) {
    //        self.tableView.contentInset = UIEdgeInsetsMake(-scrollOffsetY, 0, 0, 0);
    //    }
    
}

-(void)sendToHilee:(NSString *)func :(NSException *)exception{
    UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"" message:NSLocalizedString(@"exception_msg_exception", @"exception_msg_exception") preferredStyle:UIAlertControllerStyleAlert];
    UIAlertAction* sendButton = [UIAlertAction actionWithTitle:@"관리자에게 전송" style:UIAlertActionStyleDefault
                                                       handler:^(UIAlertAction * action) {
                                                           [alert dismissViewControllerAnimated:YES completion:nil];
                                                           
                                                           UIDevice *device = [UIDevice currentDevice];
                                                           NSString *myUserNo = [[NSUserDefaults standardUserDefaults] objectForKey:@"CUSER_NO"];
                                                           NSString *dvcKind = [device modelName];
                                                           NSString *dvcVer = device.systemVersion;
                                                           
                                                           MFMessageComposeViewController *controller = [[MFMessageComposeViewController alloc] init];
                                                           if([MFMessageComposeViewController canSendText])
                                                           {
                                                               controller.body = [NSString stringWithFormat:@"%@ / %@ / %@ \n%@ \n\n%@", dvcKind, dvcVer, myUserNo, func, exception];
                                                               controller.recipients = [NSArray arrayWithObject:@"01093917822"];
                                                               controller.messageComposeDelegate = self;
                                                               [self presentViewController:controller animated:YES completion:nil];
                                                           }
                                                       }];
    
    UIAlertAction* okButton = [UIAlertAction actionWithTitle:@"확인" style:UIAlertActionStyleDefault
                                                     handler:^(UIAlertAction * action) {
                                                         [alert dismissViewControllerAnimated:YES completion:nil];
                                                     }];
    
    [alert addAction:sendButton];
    [alert addAction:okButton];
    [self presentViewController:alert animated:YES completion:nil];
}

- (void)messageComposeViewController:(nonnull MFMessageComposeViewController *)controller didFinishWithResult:(MessageComposeResult)result {
    NSString *resultString;
    switch (result) {
        case MessageComposeResultCancelled:
            resultString = NSLocalizedString(@"cancel", @"");
            break;
            
        case MessageComposeResultFailed:
        {
            resultString = NSLocalizedString(@"fail", @"");
            break;
        }
            
        case MessageComposeResultSent:
            resultString = NSLocalizedString(@"success", @"");
            break;
            
        default:
            break;
    }
    [self dismissViewControllerAnimated:YES completion:^{
        NSLog(@"%s resultString : %@",__FUNCTION__,resultString);
    }];
}



@end
